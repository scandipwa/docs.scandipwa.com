{"componentChunkName":"component---src-templates-docs-js","path":"/docs/main-components.html","result":{"data":{"markdownRemark":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <div> <iframe src=\"https://www.youtube.com/embed/c62CDwvnutk\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div> </div>\n<p>In this tutorial we will talk about the main component files in ScandiPWA:</p>\n<ul>\n<li><a href=\"#component\">.component</a></li>\n<li><a href=\"#container\">.container</a></li>\n<li><a href=\"#style\">.style</a></li>\n<li><a href=\"#config\">.config</a></li>\n</ul>\n<p>More specifically we will talk about:</p>\n<ul>\n<li><a href=\"#map-approach-for-component-types\">Map approach for component types</a></li>\n<li><a href=\"#container-structure-containerprops-containerfunctions\">Container structure: containerProps, containerFunctions</a></li>\n<li>The props concept and delegation principle</li>\n</ul>\n<p>After watching this tutorial you should be able to discuss the following:</p>\n<ul>\n<li>Using VSCode extension for component bootstrap</li>\n<li>Top-level contents must be exported in .config file</li>\n<li>Map property principle</li>\n<li>Escaping for loops and lets</li>\n</ul>\n<p>To follow along with this tutorial, you should start with the <a href=\"https://docs.scandipwa.com/docs/environment-set-up.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">environment set-up</a>. For this demonstration weâ€™ll be using VSCode.</p>\n<p>Run <code class=\"gatsby-code-text\">yarn start</code> to start the development server and add an <code class=\"gatsby-code-text\">index.js</code> file to the <code class=\"gatsby-code-text\">src</code> folder:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"9596866555589822000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`ðŸ“‚<your-app-name>\n â”£ ðŸ“‚i18n           \n â”£ ðŸ“‚magento\n â”£ ðŸ“‚node_modules   \n â”£ ðŸ“‚public         \n â”£ ðŸ“‚src\n â”ƒ â”— ðŸ“œindex.js     # new file            \n â”£ ðŸ“œcomposer.json\n â”£ ðŸ“œpackage.json\n â”— ðŸ“œyarn.lock`, `9596866555589822000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\">ðŸ“‚<span class=\"token operator\">&lt;</span>your-app-name<span class=\"token operator\">></span>\n â”£ ðŸ“‚i18n           \n â”£ ðŸ“‚magento\n â”£ ðŸ“‚node_modules   \n â”£ ðŸ“‚public         \n â”£ ðŸ“‚src\n â”ƒ â”— ðŸ“œindex.js     <span class=\"token comment\"># new file            </span>\n â”£ ðŸ“œcomposer.json\n â”£ ðŸ“œpackage.json\n â”— ðŸ“œyarn.lock</code></pre></div>\n<p>The <code class=\"gatsby-code-text\">index.js</code> file should look like this:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"10024301378985222000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import ReactDOM from 'react-dom';\n\nReactDOM.render(\n    <UrlResolver />,\n    document.getElementById('root')\n);`, `10024301378985222000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UrlResolver</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Youâ€™ll see an error saying â€˜UrlResolverâ€™ is not defined. If youâ€™ve followed along with the <a href=\"https://docs.scandipwa.com/docs/environment-set-up.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">environment set-up</a>, youâ€™ll already have ScandiPWA Development Toolkit installed, which will be necessary for the rest of this tutorial.</p>\n<p>To resolve the â€˜not definedâ€™ issue, press <code class=\"gatsby-code-text\">ctrl + shift + P</code> to access the VSCode command pallette and type in â€˜>Create new componentâ€™ and press enter. </p>\n<p>You should then be prompted to type in your new componentâ€™s name, in this case itâ€™s <code class=\"gatsby-code-text\">UrlResolver</code>, select the <code class=\"gatsby-code-text\">Contains business logic</code> feature and press enter.</p>\n<p>The ScandiPWA Development Toolkit will generate a ScandiPWA <code class=\"gatsby-code-text\">UrlResolver</code> component folder which will contain template files:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"38665513869493305000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`ðŸ“‚<your-app-name>\n â”£ ðŸ“‚i18n           \n â”£ ðŸ“‚magento\n â”£ ðŸ“‚node_modules   \n â”£ ðŸ“‚public         \n â”£ ðŸ“‚src\n â”ƒ â”£ ðŸ“‚component/UrlResolver\n â”ƒ â”ƒ â”£ ðŸ“œindex.js\n â”ƒ â”ƒ â”£ ðŸ“œUrlResolver.component.js\n â”ƒ â”ƒ â”£ ðŸ“œUrlResolver.container.js\n â”ƒ â”ƒ â”— ðŸ“œUrlResolver.style.scss\n â”ƒ â”— ðŸ“œindex.js                 \n â”£ ðŸ“œcomposer.json\n â”£ ðŸ“œpackage.json\n â”— ðŸ“œyarn.lock`, `38665513869493305000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\">ðŸ“‚<span class=\"token operator\">&lt;</span>your-app-name<span class=\"token operator\">></span>\n â”£ ðŸ“‚i18n           \n â”£ ðŸ“‚magento\n â”£ ðŸ“‚node_modules   \n â”£ ðŸ“‚public         \n â”£ ðŸ“‚src\n â”ƒ â”£ ðŸ“‚component/UrlResolver\n â”ƒ â”ƒ â”£ ðŸ“œindex.js\n â”ƒ â”ƒ â”£ ðŸ“œUrlResolver.component.js\n â”ƒ â”ƒ â”£ ðŸ“œUrlResolver.container.js\n â”ƒ â”ƒ â”— ðŸ“œUrlResolver.style.scss\n â”ƒ â”— ðŸ“œindex.js                 \n â”£ ðŸ“œcomposer.json\n â”£ ðŸ“œpackage.json\n â”— ðŸ“œyarn.lock</code></pre></div>\n<p>If you have any issues with the imports, ScandiPWA Development Toolkit allows you to click on your issue and â€˜Fix all auto-fixable problemsâ€™. </p>\n<p>So, now we can go back to <code class=\"gatsby-code-text\">src/index.js</code> and import the <code class=\"gatsby-code-text\">UrlResolver</code>:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"95018679295957610000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import ReactDOM from 'react-dom';\n\nimport UrlResolver from 'Component/UrlResolver';\n\nReactDOM.render(\n    <UrlResolver />,\n    document.getElementById('root')\n);`, `95018679295957610000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> UrlResolver <span class=\"token keyword\">from</span> <span class=\"token string\">'Component/UrlResolver'</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UrlResolver</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Notice that we donâ€™t have to use the relative path, instead we can use an alias for the absolute path of the <code class=\"gatsby-code-text\">Component</code> folder.</p>\n<p>You can check out what path aliases are available by going to <code class=\"gatsby-code-text\">node_modules/@scandipwa/scandipwa/src</code>. The folders here represent the available aliases and these are as follows: <code class=\"gatsby-code-text\">component</code>, <code class=\"gatsby-code-text\">query</code>, <code class=\"gatsby-code-text\">route</code>, <code class=\"gatsby-code-text\">store</code>, <code class=\"gatsby-code-text\">style</code>, <code class=\"gatsby-code-text\">type</code> and <code class=\"gatsby-code-text\">util</code>. The alias for referencing these folders is simply the folder name - capitalized.</p>\n<h2 id=\"component\"><a href=\"#component\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.component</h2>\n<p>Using the previously created <code class=\"gatsby-code-text\">component/UrlResolver</code> folder, letâ€™s edit the <code class=\"gatsby-code-text\">UrlResolver.component.js</code> file:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"62986245051848335000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// some stuff\n\nrender() {\n    return (\n        <div block=&quot;UrlResolver&quot;>\n            Hello!\n        </div>    \n    );\n}`, `62986245051848335000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// some stuff</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UrlResolver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            Hello!\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>    \n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>If you go to Chrome <code class=\"gatsby-code-text\">localhost:3000</code>, youâ€™ll see the â€˜Hello!â€™ being output there.</p>\n<blockquote>\n<p><strong>Note</strong></p>\n<p>The main tasks of <code class=\"gatsby-code-text\">UrlResolver.component.js</code> are:</p>\n<ul>\n<li>Determining the page type</li>\n<li>Rendering the proper page</li>\n</ul>\n</blockquote>\n<p>So, weâ€™ll need to take a URL using the location API and weâ€™ll need to detect to which entity type the URL refers to, e.g. a page, a category or a product.</p>\n<p>First, letâ€™s look at page rendering. Letâ€™s assume that there are multiple page types. How can we render them?</p>\n<p>Since the <code class=\"gatsby-code-text\">component.js</code> files are made for pure rendering, weâ€™ll assume that the page type will be coming from props and weâ€™ll not determine page type in the component.</p>\n<p>The URL determination will be done in the <code class=\"gatsby-code-text\">container.js</code> and weâ€™ll tackle that a bit later.</p>\n<p>Letâ€™s assume that the <code class=\"gatsby-code-text\">container</code> ships us a type as a prop:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"20420699113875120000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport './UrlResolver.style';\n\nclass UrlResolver extends PureComponent {\n    static propTypes = {\n        // a propType of type string is required\n        type: PropTypes.string.isRequired\n    };\n\n    render() {\n        const { type } = this.props;\n\n        if (type === 'product') {\n            return 'product';\n        } \n        \n        if (type === 'category') {\n            return 'category';\n        }\n        return 'cms_page';\n    }\n}`, `20420699113875120000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PureComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./UrlResolver.style'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UrlResolver</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PureComponent</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// a propType of type string is required</span>\n        type<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'product'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'product'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> \n        \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'cms_page'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Letâ€™s add individual render methods for each product type:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"39412402436806795000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport './UrlResolver.style';\n\nclass UrlResolver extends PureComponent {\n    static propTypes = {\n        // a propType of type string is required\n        type: PropTypes.string.isRequired\n    };\n\n    renderProduct() {\n        return 'product';\n    }\n\n    renderCategory() {\n        return 'category';\n    }\n\n    renderCmsPage() {\n        return 'cms_page';\n    }\n\n    render404() {\n        return '404';\n    }\n\n    render() {\n        const { type } = this.props;\n\n        if (type === PRODUCT_TYPE) {\n            return this.renderProduct();\n        } \n        \n        if (type === CATEGORY_TYPE) {\n            return this.renderCategory();\n        }\n        return this.renderCmsPage();\n    }\n    // some stuff\n}`, `39412402436806795000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PureComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./UrlResolver.style'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UrlResolver</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PureComponent</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// a propType of type string is required</span>\n        type<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">renderProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'product'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">renderCategory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">renderCmsPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'cms_page'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render404</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'404'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token constant\">PRODUCT_TYPE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> \n        \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>type <span class=\"token operator\">===</span> <span class=\"token constant\">CATEGORY_TYPE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderCategory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderCmsPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// some stuff</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"config\"><a href=\"#config\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.config</h2>\n<p>Add the product page types as constants in <code class=\"gatsby-code-text\">UrlResolver.config.js</code>:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"25536549928833987000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`export const PRODUCT_TYPE = 'product';\nexport const CATEGORY_TYPE = 'category';\nexport const CMS_PAGE_TYPE = 'cms_page';`, `25536549928833987000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">PRODUCT_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'product'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">CATEGORY_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">CMS_PAGE_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'cms_page'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We shouldnâ€™t add the constants to the <code class=\"gatsby-code-text\">component.js</code> file due to the fact that in order for <code class=\"gatsby-code-text\">webpack</code> to be able to create smaller sized bundles, we need to add the constants that might be reused by different modules to the <code class=\"gatsby-code-text\">config.js</code> file - outside of large modules.</p>\n<p><code class=\"gatsby-code-text\">webpack</code> canâ€™t split modules apart, so, if only a constant is needed, the bundle size would be minimized significally by using a constant-only file. In this case, creating a new file means creating a new module.</p>\n<p>The issue with our <code class=\"gatsby-code-text\">UrlResolver.component.js</code> file now is that the code repeats itself. An option is to write <code class=\"gatsby-code-text\">switch</code> statements instead of <code class=\"gatsby-code-text\">if</code> statements:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"38215080109942430000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// some stuff\n\nrender(){\n    const { type } = this.props;\n\n    switch (type) {\n    case PRODUCT_TYPE:\n        return this.renderProduct();\n    case CATEGORY_TYPE:\n        return this.renderCategory(); \n    case CMS_PAGE_TYPE:\n        return this.renderCmsPage(); \n    default:\n        return this.render404();\n    }\n}`, `38215080109942430000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// some stuff</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">PRODUCT_TYPE</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">CATEGORY_TYPE</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderCategory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token keyword\">case</span> <span class=\"token constant\">CMS_PAGE_TYPE</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderCmsPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">render404</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Notice that ScandiPWA has a specific writing convention in place for <code class=\"gatsby-code-text\">switch</code> statements - the cases should be on the same indentation level as the <code class=\"gatsby-code-text\">switch</code> itself.</p>\n<p>Since we havenâ€™t imported the constants from the <code class=\"gatsby-code-text\">config</code> file, we can use auto-fixer to â€˜Fix this simple import-sort/sort problemâ€™ and itâ€™ll add the following to our imports:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"78366528827854950000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport {\n    CATEGORY_TYPE,\n    CMS_PAGE_TYPE,\n    PRODUCT_TYPE\n} from './UrlResolver.config';\n\nimport './UrlResolver.style';`, `78366528827854950000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PureComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">CATEGORY_TYPE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CMS_PAGE_TYPE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">PRODUCT_TYPE</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./UrlResolver.config'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./UrlResolver.style'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If we check-in with the browser, <code class=\"gatsby-code-text\">localhost:3000</code> will display â€˜404â€™ as the type of page hasnâ€™t yet been passed, itâ€™s undefined.</p>\n<h2 id=\"map-approach-for-component-types\"><a href=\"#map-approach-for-component-types\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Map approach for component types</h2>\n<p>The <code class=\"gatsby-code-text\">switch</code> approach for component types is still not the most efficient way to go about rendering since we canâ€™t quickly extend the method. The solution to this is to create a rendering map:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"45169077576564460000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`class UrlResolver extends PureComponent {\n    static propTypes = {\n        type: PropTypes.string.isRequired\n    };\n\n    renderMap = {\n        [CATEGORY_TYPE]: this.renderCategory.bind(this),\n        [PRODUCT_TYPE]: this.renderProduct.bind(this),\n        [CMS_PAGE_TYPE]: this.renderCmsPage.bind(this),\n    };\n\n    // other stuff`, `45169077576564460000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">UrlResolver</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PureComponent</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    renderMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">[</span><span class=\"token constant\">CATEGORY_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderCategory</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token constant\">PRODUCT_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderProduct</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token constant\">CMS_PAGE_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderCmsPage</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// other stuff</span></code></pre></div>\n<p>As you might know <code class=\"gatsby-code-text\">this</code> can cause context loss, so we need to <code class=\"gatsby-code-text\">bind</code> the type to the render method.</p>\n<p>After creating the render map, we need to replace our <code class=\"gatsby-code-text\">switch</code> statement:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"11932821836739050000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// some stuff\n\nrender(){\n    const { type } = this.props;\n\n    const renderFunction = this.renderMap[type];\n\n    if (renderFunction) {\n        return renderFunction();\n    }\n\n    return this.render404();\n\n}`, `11932821836739050000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// some stuff</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> renderFunction <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderMap<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>renderFunction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">renderFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">render404</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can further optimize this by using the logical operator OR (||)</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"25002374369059190000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// some stuff\n\nrender(){\n    const { type } = this.props;\n\n    const renderFunction = this.renderMap[type] || this.render404.bind(this);\n    return renderFunction();\n}`, `25002374369059190000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// some stuff</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> renderFunction <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderMap<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">render404</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">renderFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>In both cases our render will return â€˜404â€™ in the case if no type was found.</p>\n<p>So, the finalized <code class=\"gatsby-code-text\">component</code> file will look like this:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"17790454021960489000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport {\n    CATEGORY_TYPE,\n    CMS_PAGE_TYPE,\n    PRODUCT_TYPE\n} from './UrlResolver.config';\n\nimport './UrlResolver.style';\n\nclass UrlResolver extends PureComponent {\n    static propTypes = {\n        type: PropTypes.string.isRequired\n    };\n\n    renderMap = {\n        [CATEGORY_TYPE]: this.renderCategory.bind(this),\n        [PRODUCT_TYPE]: this.renderProduct.bind(this),\n        [CMS_PAGE_TYPE]: this.renderCmsPage.bind(this),\n        // add a new [KEY] to object to extend\n        // type constants are in config file \n    };\n\n    renderProduct() {\n        return 'product';\n    }\n\n    renderCategory() {\n        return 'category';\n    }\n\n    renderCmsPage() {\n        return 'cms_page';\n    }\n\n    render404() {\n        return '404';\n    }\n\n    render(){\n        const { type } = this.props;\n\n        const renderFunction = this.renderMap[type] || this.render404.bind(this);\n        return renderFunction();\n    }\n}\n\nexport default UrlResolver;`, `17790454021960489000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PureComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">CATEGORY_TYPE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CMS_PAGE_TYPE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">PRODUCT_TYPE</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./UrlResolver.config'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./UrlResolver.style'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UrlResolver</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PureComponent</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">static</span> propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    renderMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">[</span><span class=\"token constant\">CATEGORY_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderCategory</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token constant\">PRODUCT_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderProduct</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token constant\">CMS_PAGE_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderCmsPage</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// add a new [KEY] to object to extend</span>\n        <span class=\"token comment\">// type constants are in config file </span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">renderProduct</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'product'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">renderCategory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'category'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">renderCmsPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'cms_page'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render404</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'404'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">const</span> renderFunction <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderMap<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">render404</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">renderFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> UrlResolver<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"container\"><a href=\"#container\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.container</h2>\n<p>The <code class=\"gatsby-code-text\">container</code> has all of the business logic inside of it. So, in order to determine the URL, we should go to the URL container. We can try to guess the URL type based on the URL, but we can also request the URL from the Magento URL resolver aka UrlRewrite\\resolve. </p>\n<p>For now, letâ€™s just guess which type weâ€™re referring to based on the location. So, to actually do it we should first understand the concept of a <code class=\"gatsby-code-text\">container</code>. </p>\n<h2 id=\"container-structure-containerprops-containerfunctions\"><a href=\"#container-structure-containerprops-containerfunctions\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Container structure: containerProps, containerFunctions</h2>\n<p>A <code class=\"gatsby-code-text\">container</code> file has two functions always defined:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"24997476602725620000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`containerFunctions = {\n    // getData: this.getData.bind(this)\n};\n\ncontainerProps = () => {\n    // isDisabled: this._getIsDisabled()\n};`, `24997476602725620000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">containerFunctions <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// getData: this.getData.bind(this)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function-variable function\">containerProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// isDisabled: this._getIsDisabled()</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"gatsby-code-text\">containerFunctions</code> is an object containing the mapping of a key that will be later passed to your component as a prop and the function thatâ€™ll be used to implement the prop.</p>\n<p>The <code class=\"gatsby-code-text\">getData</code> key will be passed as a prop to the <code class=\"gatsby-code-text\">component</code>, where itâ€™ll call it and then itâ€™ll return some data. So, the logic itself will be located in the <code class=\"gatsby-code-text\">container</code> and the <code class=\"gatsby-code-text\">component</code> will simply call it.</p>\n<p>We wonâ€™t be using the <code class=\"gatsby-code-text\">containerFunctions</code> in this tutorial, so we can remove all references to it from the <code class=\"gatsby-code-text\">container</code> file.</p>\n<p>Next are the <code class=\"gatsby-code-text\">containerProps</code> which are meant for props mapping. For example, if you have a property to define, like <code class=\"gatsby-code-text\">isDisabled</code> or a type, you provide a function that will <code class=\"gatsby-code-text\">get</code> this property for you. </p>\n<p>Again, the property itself is used in the <code class=\"gatsby-code-text\">component</code> for rendering, but the value retrieved from the <code class=\"gatsby-code-text\">container</code>.</p>\n<p>In order to determine the page type letâ€™s do the following in the <code class=\"gatsby-code-text\">container.js</code> file.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"92291521941908550000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// add () to get a valid object returned, instead of a function\ncontainerProps = () => ({\n    type: this._getTypeFromURL()\n});\n\n_getTypeFromURL() {\n    return PRODUCT_TYPE;\n}\n\n// some stuff`, `92291521941908550000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// add () to get a valid object returned, instead of a function</span>\n<span class=\"token function-variable function\">containerProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_getTypeFromURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">_getTypeFromURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token constant\">PRODUCT_TYPE</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// some stuff</span></code></pre></div>\n<p>In order to use <code class=\"gatsby-code-text\">PRODUCT_TYPE</code> we also need to import it in the <code class=\"gatsby-code-text\">UrlResolver.container.js</code> file:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"81033195406041970000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import { PureComponent } from 'react';\n\nimport UrlResolver from './UrlResolver.component';\nimport { PRODUCT_TYPE } from './UrlResolver.config';`, `81033195406041970000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> PureComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> UrlResolver <span class=\"token keyword\">from</span> <span class=\"token string\">'./UrlResolver.component'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">PRODUCT_TYPE</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./UrlResolver.config'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If we compile and go to <code class=\"gatsby-code-text\">localhost:3000</code> in our browser, we should see â€˜productâ€™ now.</p>\n<p>Now, we need to implement mapping itself. Letâ€™s assume that the page weâ€™re visiting contains the type and the URL. This means that we need to implement mapping again. This time instead of mapping to a function, letâ€™s use regex, since itâ€™s one of the faster ways to find strings.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"15844119141236824000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// some stuff\n\ntypeMap = {\n    [CATEGORY_TYPE]: /category/,\n    [PRODUCT_TYPE]: /product/,\n    [CMS_PAGE_TYPE]: /page/,\n};\n\ncontainerProps = () => ({\n    type: this._getTypeFromURL()\n});\n\n_getTypeFromURL() {\n    // eslint-disable-next-line fp/no-let\n    for (let i = 0; i < Object.entries.(this.typeMap).length; i++){\n        const [type, regex] = Object.entries(this.typeMap)[i];\n\n        // checking if the provided path name matches\n        if (regex.test(window.location.pathname)) {\n            return type;\n        }\n    }\n    return ''; // will be handled as 404 by component\n}`, `15844119141236824000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// some stuff</span>\n\ntypeMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">CATEGORY_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token regex\">/category/</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">PRODUCT_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token regex\">/product/</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">CMS_PAGE_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token regex\">/page/</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function-variable function\">containerProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_getTypeFromURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">_getTypeFromURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// eslint-disable-next-line fp/no-let</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> Object<span class=\"token punctuation\">.</span>entries<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>typeMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">,</span> regex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>typeMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// checking if the provided path name matches</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// will be handled as 404 by component</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Disable any ESlint warnings and donâ€™t forget to:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"67621973663835370000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import {\n    CATEGORY_TYPE,\n    CMS_PAGE_TYPE,\n    PRODUCT_TYPE\n} from './UrlResolver.config';`, `67621973663835370000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">CATEGORY_TYPE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CMS_PAGE_TYPE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">PRODUCT_TYPE</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./UrlResolver.config'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>So in <code class=\"gatsby-code-text\">localhost:3000</code> weâ€™ll see â€˜404â€™, but if we go to <code class=\"gatsby-code-text\">localhost:3000/product</code> in our browser, weâ€™ll see â€˜productâ€™.</p>\n<p>A way of optimizing the for loop would be by defining the array beforehand:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"93229859099752370000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`_getTypeFromURL() {\n    const array = Object.entries.(this.typeMap);\n\n    // eslint-disable-next-line fp/no-let\n    for (let i = 0; i < array.length; i++){\n        const [type, regex] = array[i];\n\n        // checking if the provided path name matches\n        if (regex.test(window.location.pathname)) {\n            return type;\n        }\n    }\n    return ''; // will be handled as 404 by component\n}`, `93229859099752370000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token function\">_getTypeFromURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> array <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span>entries<span class=\"token punctuation\">.</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>typeMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// eslint-disable-next-line fp/no-let</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">,</span> regex<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> array<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// checking if the provided path name matches</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// will be handled as 404 by component</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Instead of the type map, we should make a type list thatâ€™ll work as an array. This will work much better for us, as itâ€™ll be possible to loop through it right away:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"97247776168625540000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`typeList = [\n    {\n        type: CATEGORY_TYPE,\n        regex: /category/\n    },\n    {\n        type: CMS_PAGE_TYPE,\n        regex: /page/\n    },\n    {\n        type: PRODUCT_TYPE,\n        regex: /product/\n    },\n]\n\ncontainerProps = () => ({\n    type: this._getTypeFromURL()\n});\n\n_getTypeFromURL() {\n    // eslint-disable-next-line fp/no-let\n    for (let i = 0; i < this.typeList.length; i++){\n        const { type, regex } = this.typeList[i];\n\n        // checking if the provided path name matches\n        if (regex.test(window.location.pathname)) {\n            return type;\n        }\n    }\n    return ''; // will be handled as 404 by component\n}`, `97247776168625540000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">typeList <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token constant\">CATEGORY_TYPE</span><span class=\"token punctuation\">,</span>\n        regex<span class=\"token operator\">:</span> <span class=\"token regex\">/category/</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token constant\">CMS_PAGE_TYPE</span><span class=\"token punctuation\">,</span>\n        regex<span class=\"token operator\">:</span> <span class=\"token regex\">/page/</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        type<span class=\"token operator\">:</span> <span class=\"token constant\">PRODUCT_TYPE</span><span class=\"token punctuation\">,</span>\n        regex<span class=\"token operator\">:</span> <span class=\"token regex\">/product/</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token function-variable function\">containerProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">_getTypeFromURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">_getTypeFromURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// eslint-disable-next-line fp/no-let</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>typeList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">,</span> regex <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>typeList<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// checking if the provided path name matches</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>regex<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// will be handled as 404 by component</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Another way of optimizing would be by using array functions:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"51939065133332150000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`_getTypeFromURL() {\n    const { type } = this.typeList.find(\n        ({ type, regex }) => regex.test(window.location.pathname)\n    );\n    return type;\n}`, `51939065133332150000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token function\">_getTypeFromURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>typeList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">,</span> regex <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> regex<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>An issue with using <code class=\"gatsby-code-text\">find</code> is that it can return <code class=\"gatsby-code-text\">null</code>. In this case weâ€™ll get a TypeError: Cannot destructure property â€˜typeâ€™ because itâ€™s undefined. </p>\n<p>A solution would be to return an empty array in case nothing is found. If an empty array is destructured the type is â€˜undefinedâ€™, this then can be handled by the <code class=\"gatsby-code-text\">component</code>:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"679212703763121300\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`_getTypeFromURL() {\n    const { type } = this.typeList.find(\n        ({ type, regex }) => regex.test(window.location.pathname)\n    ) || {};\n\n    return type; // will be handled as 404 if undefined by component\n}`, `679212703763121300`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token function\">_getTypeFromURL</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>typeList<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n        <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> type<span class=\"token punctuation\">,</span> regex <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> regex<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> type<span class=\"token punctuation\">;</span> <span class=\"token comment\">// will be handled as 404 if undefined by component</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>We can see that by using <code class=\"gatsby-code-text\">typeList</code> the rest of our logic shrunk down as well. This is why we need to understand which data structure is needed before attempting to implement anything.</p>\n<p>For example, arrays come in handy when you need to find something, but for rendering maps are a better solution.</p>\n<h2 id=\"style\"><a href=\"#style\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>.style</h2>\n<p>Letâ€™s go back to the <code class=\"gatsby-code-text\">UrlResolver.component.js</code> file and implement <code class=\"gatsby-code-text\">renderType</code> as a separate function. This is needed because the <code class=\"gatsby-code-text\">render</code> itself should return the style wrapper:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"79523245192821340000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// some stuff\n\n    render404() {\n        return '404';\n    }\n\n    renderType() {\n        const { type = '404' } = this.props;\n        const renderFunction = this.renderMap[type] || this.render404.bin(this);\n        return (\n            <article\n                block=&quot;UrlResolver&quot;\n                elem=&quot;Type&quot;\n                mods={ { type } }\n            >\n                { renderFunction();}\n            </article>\n        );\n    }\n\n    render(){\n        return (\n            <main block=&quot;UrlResolver&quot;>\n                { this.renderType() }\n            </main>\n        );\n    }\n}\n\nexport default UrlResolver;`, `79523245192821340000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// some stuff</span>\n\n    <span class=\"token function\">render404</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'404'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">renderType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type <span class=\"token operator\">=</span> <span class=\"token string\">'404'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> renderFunction <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>renderMap<span class=\"token punctuation\">[</span>type<span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>render404<span class=\"token punctuation\">.</span><span class=\"token function\">bin</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>article</span>\n                <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UrlResolver<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">elem</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Type<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">mods</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></span>\n            <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span> <span class=\"token function\">renderFunction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>article</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span> <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>UrlResolver<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderType</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> UrlResolver<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Wrapping the <code class=\"gatsby-code-text\">renderFunction</code> in <code class=\"gatsby-code-text\">article</code> ensures that weâ€™ll be able to reference to it using a BEM abstraction later on.</p>\n<p>Go to <code class=\"gatsby-code-text\">UrlResolver.style.scss</code> to apply some styles. If you want to take an in-depth look at ScandiPWA styling conventions, go <a href=\"https://docs.scandipwa.com/docs/theme-styling.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"38127036937646650000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`:root {\n    --url-resolver-color: orange;\n}\n\n.UrlResolver {\n    font-size: 20px;\n\n    &-Type {\n        color: var(--url-resolver-color);\n\n        // type specific colors\n        &_type {\n            &_404 {\n                color: red;\n            }\n        }\n    }\n}`, `38127036937646650000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token selector\">:root </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">--url-resolver-color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.UrlResolver </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>-Type </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--url-resolver-color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// type specific colors</span>\n        <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>_type </span><span class=\"token punctuation\">{</span>\n            <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>_404 </span><span class=\"token punctuation\">{</span>\n                <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The issue with <code class=\"gatsby-code-text\">&amp;_404 { color: red; }</code> is that weâ€™re redefining a property, instead we should redefine the CSS custom variable:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"45592938304100565000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`:root {\n    --url-resolver-color: orange;\n}\n\n.UrlResolver {\n    font-size: 20px;\n\n    &-Type {\n        color: var(--url-resolver-color);\n\n        // type specific colors\n        &_type {\n            &_404 {\n                --url-resolver-color: red;\n            }\n        }\n    }\n}`, `45592938304100565000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token selector\">:root </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">--url-resolver-color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.UrlResolver </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>-Type </span><span class=\"token punctuation\">{</span>\n        <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--url-resolver-color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// type specific colors</span>\n        <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>_type </span><span class=\"token punctuation\">{</span>\n            <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>_404 </span><span class=\"token punctuation\">{</span>\n                <span class=\"token property\">--url-resolver-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>What if we move the variable declaration a level up?</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"20452238687488578000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`:root {\n    --url-resolver-color: orange;\n}\n\n.UrlResolver {\n    font-size: 20px;\n    color: var(--url-resolver-color);\n\n    &-Type {\n        &_type {\n            &_404 {\n                --url-resolver-color: red;\n            }\n        }\n    }\n}`, `20452238687488578000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token selector\">:root </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">--url-resolver-color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.UrlResolver </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--url-resolver-color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>-Type </span><span class=\"token punctuation\">{</span>\n        <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>_type </span><span class=\"token punctuation\">{</span>\n            <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>_404 </span><span class=\"token punctuation\">{</span>\n                <span class=\"token property\">--url-resolver-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now, the logic will stop working and â€˜404â€™ will be orange. As mentioned in <a href=\"https://docs.scandipwa.com/docs/theme-styling.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">the previous tutorial</a> the CSS custom variables are resolved from the top of the file. </p>\n<p>The first element itâ€™ll look at is the <html> and there the variable will be defined in <code class=\"gatsby-code-text\">:root{}</code>. Going further down to <body>, <div id=\"root\"> and further on we can see no declarations of this variable. </p>\n<p>Itâ€™ll not care if the variable declaration appears inside the element, it only cares if the declaration happens above the element.</p>\n<p>This is why color property declarations should appear on the same level or deeper than the variable re-declaration.</p>\n<p>The only thing left to do is to get rid of the hardcoded red:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"24589180051817380000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`:root {\n    --url-resolver-color: orange;\n    --url-resolver-404-color: red;\n}\n\n.UrlResolver {\n    font-size: 20px;\n    color: var(--url-resolver-color);\n\n    &-Type {\n        &_type {\n            &_404 {\n                --url-resolver-color: var(--url-resolver-404-color);\n            }\n        }\n    }\n}`, `24589180051817380000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token selector\">:root </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">--url-resolver-color</span><span class=\"token punctuation\">:</span> orange<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">--url-resolver-404-color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.UrlResolver </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 20px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--url-resolver-color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>-Type </span><span class=\"token punctuation\">{</span>\n        <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>_type </span><span class=\"token punctuation\">{</span>\n            <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>_404 </span><span class=\"token punctuation\">{</span>\n                <span class=\"token property\">--url-resolver-color</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--url-resolver-404-color<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"ScandiPWA Main Components"},"fields":{"path":"content/docs/main-components.md","slug":"/docs/main-components.html"}}},"pageContext":{"slug":"/docs/main-components.html"}},"staticQueryHashes":[]}