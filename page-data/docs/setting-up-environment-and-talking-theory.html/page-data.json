{"componentChunkName":"component---src-templates-docs-js","path":"/docs/setting-up-environment-and-talking-theory.html","result":{"data":{"markdownRemark":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <div class=\"video\"> <iframe src=\"https://www.youtube.com/embed/ON37CsjAANs\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div> </div>\n<p>ScandiPWA v3 has arrived at your doorstep and with it comes a new tech stack. Let’s talk about it!</p>\n<p>Topics covered in this tutorial:</p>\n<ul>\n<li><a href=\"#whats-wrong-with-jquery\">What’s Wrong With jQuery?</a></li>\n<li><a href=\"#history-api\">History API</a></li>\n<li><a href=\"#react-and-jsx\">React and JSX</a></li>\n<li>\n<p><a href=\"#setting-up-the-environment\">Setting Up The Environment</a></p>\n<ul>\n<li><a href=\"#vscode-extensions\">VSCode Extensions</a></li>\n<li><a href=\"#node\">Node</a></li>\n<li><a href=\"#yarn\">Yarn</a></li>\n</ul>\n</li>\n<li><a href=\"#installing-the-scandipwa-app\">Installing The ScandiPWA App</a></li>\n</ul>\n<h2 id=\"whats-wrong-with-jquery\"><a href=\"#whats-wrong-with-jquery\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>What’s Wrong With jQuery?</h2>\n<p>ScandiPWA v2 used <a href=\"https://jquery.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">jQuery</a> - an API for working with document object models or DOMs. Allegedly, jQuery lets you do more while writing less. So, why use something else?</p>\n<p>Each page of an application has a header, a footer and some content. We need to customize all of this periodically. The jQuery library theoretically allows us to have easy access to any specific element, but it would be very messy to implement as a jQuery template due to the fact that it consists of pure strings that are hard to edit.</p>\n<h2 id=\"history-api\"><a href=\"#history-api\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>History API</h2>\n<p>With the coming-of-age of <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History_API\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">history API</a> ScandiPWA has switched to React.</p>\n<p>Previously each page you visited made a request to a server, which then provided a renderable output. Now, we can skip the server step and start to render the page on the client’s side by re-using the URL that’s currently being visited, if it had been visited at some point in history.</p>\n<p>The history API lets us track the changes made in the state of the application and control the routing.</p>\n<h2 id=\"react-and-jsx\"><a href=\"#react-and-jsx\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React and JSX</h2>\n<p>Moreover, <a href=\"https://reactjs.org/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React</a> in itself allows us to write simple, editable templates and components. These so-called components are encapsulated code chunks that later will be shipped or not shipped based on necessity. </p>\n<p>React allows us to write templates using JSX. You can read more about JSX in the context of ScandiPWA <a href=\"https://docs.scandipwa.com/docs/technology-stack.html#magento-vs-scandipwa-tech-stack\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>. </p>\n<p><a href=\"https://reactjs.org/docs/introducing-jsx.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">JSX</a> is a syntax extension to JavaScript which means that we can use the JS variables, expressions etc. inside of it to write a template.</p>\n<p>For example, here we define a constant that gets assigned a JSX tag:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"1061040353942854800\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const element = <h1>Hello, world!</h1>;`, `1061040353942854800`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, world!</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The following example can be found <a href=\"https://reactjs.org/docs/introducing-jsx.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a> and it shows us how we can declare a variable, use it in a template and immediately render it:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"82960335145053500000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`const name = 'Josh Perez';\nconst element = <h1>Hello, {name}</h1>;\n\nReactDOM.render(\n  element,\n  document.getElementById('root')\n);`, `82960335145053500000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Josh Perez'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> element <span class=\"token operator\">=</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, </span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n  element<span class=\"token punctuation\">,</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Let’s briefly look at the <a href=\"https://reactjs.org/docs/components-and-props.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">components</a>.</p>\n<p>There are two types of components:</p>\n<ul>\n<li>functional components - processes properties and returns a template</li>\n<li>\n<p>class components - let’s you work with OOP concepts</p>\n<ul>\n<li>very useful when you’re working with a theme that should be extended (like ScandiPWA)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"setting-up-the-environment\"><a href=\"#setting-up-the-environment\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting Up The Environment</h2>\n<p>The ScandiPWA team recommends using VSCode as a development environment due to its ease of use and extension availability.</p>\n<h3 id=\"vscode-extensions\"><a href=\"#vscode-extensions\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VSCode Extensions</h3>\n<p>Recommended VSCode extensions:</p>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ESLint</a> - JavaScript code quality assurance tool. ESlint analyzes your code and warns you of any errors that could compromise its stability.</li>\n<li>ScandiPWA Development Toolkit - lets you customize your theme with more ease, you can download the <code class=\"gatsby-code-text\">.vsix</code> file <a href=\"https://drive.google.com/file/d/1Xm_sWSh4ceFC70Gc88VvRy23w5F6C6Zd/view\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</li>\n</ul>\n<p>You can manually install a VSCode extension by going to the extensions view or hitting <code class=\"gatsby-code-text\">Ctrl + Shift + X</code> on the keyboard. Then click on <code class=\"gatsby-code-text\">Views And More Actions...</code> and <code class=\"gatsby-code-text\">Install From VSIX</code>. </p>\n<p>Alternatively, you can also use the command line:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"7530424258032475000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`code --install-extension path/to/myextension.vsix`, `7530424258032475000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\">code --install-extension path/to/myextension.vsix</code></pre></div>\n<h3 id=\"node\"><a href=\"#node\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Node</h3>\n<p>Check if <a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Node.js</a> is installed on your computer by typing the following command in the terminal:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"11647365752757244000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`node -v`, `11647365752757244000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\">node -v</code></pre></div>\n<p>For the development of ScandiPWA you need Node version 10 and higher.</p>\n<h3 id=\"yarn\"><a href=\"#yarn\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Yarn</h3>\n<p>Optional in order to get faster install times than using <code class=\"gatsby-code-text\">npm</code>. If you don’t want to use Yarn, <code class=\"gatsby-code-text\">npm</code> will suffice.</p>\n<h2 id=\"installing-the-scandipwa-app\"><a href=\"#installing-the-scandipwa-app\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing The ScandiPWA App</h2>\n<p>After you have Node and Yarn installed you can type the following in your command line:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"62745352751306990000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`npx create-scandipwa-app <your-app-name>`, `62745352751306990000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\">npx create-scandipwa-app <span class=\"token operator\">&lt;</span>your-app-name<span class=\"token operator\">></span></code></pre></div>\n<p>After you’ve successfully created the ScandiPWA theme, go to your theme’s folder and run the following command that will compile the project:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"59035732332275016000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`yarn start`, `59035732332275016000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token function\">yarn</span> start</code></pre></div>\n<p>Let’s look at the file structure:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"44778660179028670000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`📂<your-app-name>\n ┣ 📂i18n           # internationalization folder\n ┣ 📂magento\n ┣ 📂node_modules   # contains the app's dependencies\n ┣ 📂public         # assets should be put here\n ┣ 📂src            # empty source folder\n ┣ 📜composer.json\n ┣ 📜package.json\n ┗ 📜yarn.lock`, `44778660179028670000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\">📂<span class=\"token operator\">&lt;</span>your-app-name<span class=\"token operator\">></span>\n ┣ 📂i18n           <span class=\"token comment\"># internationalization folder</span>\n ┣ 📂magento\n ┣ 📂node_modules   <span class=\"token comment\"># contains the app's dependencies</span>\n ┣ 📂public         <span class=\"token comment\"># assets should be put here</span>\n ┣ 📂src            <span class=\"token comment\"># empty source folder</span>\n ┣ 📜composer.json\n ┣ 📜package.json\n ┗ 📜yarn.lock</code></pre></div>\n<p>The <code class=\"gatsby-code-text\">src</code> or source folder will be empty in a fresh install. Since ScandiPWA is meant to be extended, not modified, a fresh install will run the default ScandiPWA theme until new files that will override the theme are added to the <code class=\"gatsby-code-text\">src</code> folder.</p>\n<p>You can check out the what the default theme consists of in <code class=\"gatsby-code-text\">node_modules/@scandipwa/scandipwa/src</code> - the original source folder.</p>\n<p>The <code class=\"gatsby-code-text\">public</code> folder should contain any assets you want to have like fonts, icons etc.</p>\n<p><code class=\"gatsby-code-text\">i18n</code> or internationalization folder contains files for locale handling and translations of any phrases you have on the app.</p>\n<p>The <code class=\"gatsby-code-text\">package.json</code> file contains two dependencies:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"99915958675241390000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;dependencies&quot;: {\n    &quot;@scandipwa/scandipwa&quot;: &quot;0.0.1&quot;,\n    &quot;@scandipwa/scandipwa-scripts&quot;: &quot;0.0.5&quot;\n}`, `99915958675241390000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token string\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"@scandipwa/scandipwa\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"@scandipwa/scandipwa-scripts\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.0.5\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"gatsby-code-text\">scandipwa</code> dependency currently is in v2.17.0. <code class=\"gatsby-code-text\">scandipwa-scripts</code> dependency contains the <code class=\"gatsby-code-text\">webpack</code> configuration.</p>\n<p>There are two scripts available out of the box as well:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"94059091695839050000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;scripts&quot;: {\n    &quot;start&quot;: &quot;scandipwa-scripts start&quot;,\n    &quot;build&quot;: &quot;scandipwa-scripts build&quot;\n}`, `94059091695839050000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token string\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scandipwa-scripts start\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"scandipwa-scripts build\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"gatsby-code-text\">start</code> command begins the local file watching process and starts the local dev server that will let you see the changes in the browser right as you’ve made them. </p>\n<p>Note that <code class=\"gatsby-code-text\">yarn start</code> was the first command that we ran, thus the development process can begin. You can check out your theme by going to <code class=\"gatsby-code-text\">localhost:3000</code> in your browser.</p>\n<p>The <code class=\"gatsby-code-text\">build</code> command is for starting the production build process. You can build in Magento mode as a Magento theme and you can also build as a store front. </p>\n<p>If you want to build ScandiPWA as a Magento theme, you’ll notice that the <code class=\"gatsby-code-text\">composer.json</code> file contains the theme registration and the <code class=\"gatsby-code-text\">magento</code> folder contains all of the assets needed for defining a theme.</p>","frontmatter":{"title":"Setting Up Environment and Talking Theory"},"fields":{"path":"content/docs/setting-up-environment-and-talking-theory.md","slug":"/docs/setting-up-environment-and-talking-theory.html"}}},"pageContext":{"slug":"/docs/setting-up-environment-and-talking-theory.html"}},"staticQueryHashes":[]}