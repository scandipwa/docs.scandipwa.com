{"componentChunkName":"component---src-templates-docs-js","path":"/docs/best-practices-styles.html","result":{"data":{"markdownRemark":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <div class=\"video\"> <iframe src=\"https://www.youtube.com/embed/W4LUYfLUCqs\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div> </div>\n<p>ScandiPWA recommended best practices:</p>\n<ul>\n<li><a href=\"#only-one-class-declaration-per-.scss-file\">Only One Class Declaration Per <code class=\"gatsby-code-text\">.scss</code> File</a></li>\n<li><a href=\"#preferably-concatenate-class-names\">Preferably Concatenate Class Names</a></li>\n<li><a href=\"#follow-the-bem-methodology\">Follow The BEM Methodology</a></li>\n<li><a href=\"#use-sass-variables-or-css-custom-variables\">Use Sass Variables Or CSS Custom Variables</a></li>\n<li><a href=\"#dont-write-vendor-prefixes\">Don’t Write Vendor Prefixes</a></li>\n<li><a href=\"#use-stylelint\">Use StyleLint</a></li>\n<li><a href=\"#prefer-rem-units-for-content-specific-elements\">Prefer <code class=\"gatsby-code-text\">rem</code> Units For Content Specific Elements</a></li>\n<li><a href=\"#know-the-defaults-and-utilities\">Know The Defaults And Utilities</a></li>\n</ul>\n<h2 id=\"only-one-class-declaration-per-scss-file\"><a href=\"#only-one-class-declaration-per-scss-file\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Only One Class Declaration Per <code class=\"gatsby-code-text\">.scss</code> File</h2>\n<p>Let’s look at one of the components. Open up a <code class=\"gatsby-code-text\">style.scss</code> file.\nYou’ll notice that the component’s class is declared only once at the top of the page and there are no other declarations of classes in this document.</p>\n<p>This lets you quickly find and edit any elements you need.</p>\n<h2 id=\"preferably-concatenate-class-names\"><a href=\"#preferably-concatenate-class-names\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Preferably Concatenate Class Names</h2>\n<p>This can be done due to the fact that ScandiPWA uses <a href=\"http://getbem.com/introduction/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">BEM or Block Element Modifiers</a>. Note that the elements are divided using dashes (-) and the modifiers are divided using underscores (_). Blocks and elements need to be capitalized, modifiers, however, start with lowercase.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"50465275860690740000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`.ClassName{         # block\n  &-Element{        # element\n    // ...\n  }\n  &-OtherElement{\n    &_isGood        # modifier\n  }\n}`, `50465275860690740000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token selector\">.ClassName</span><span class=\"token punctuation\">{</span>         <span class=\"token selector\"># block\n  <span class=\"token parent important\">&amp;</span>-Element</span><span class=\"token punctuation\">{</span>        # element\n    <span class=\"token comment\">// ...</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>-OtherElement</span><span class=\"token punctuation\">{</span>\n    &amp;_isGood        # modifier\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This will have the following representation in React:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"75160672834158330000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`.ClassName                  \n┃ ┗.ClassName-Element       \n┗.ClassName-Element_isGood`, `75160672834158330000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token punctuation\">.</span>ClassName                  \n┃ ┗<span class=\"token punctuation\">.</span>ClassName<span class=\"token operator\">-</span>Element       \n┗<span class=\"token punctuation\">.</span>ClassName<span class=\"token operator\">-</span>Element_isGood</code></pre></div>\n<p>This way you can nest the names of the classes, instead of the selectors.</p>\n<p>Try to refrain from nesting classes unless absolutely necessary. Nested classes will add to the complexity of your code and make it difficult to debug, override and render.</p>\n<h3 id=\"types-of-modifiers\"><a href=\"#types-of-modifiers\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Types Of Modifiers</h3>\n<ul>\n<li>\n<p>Boolean modifier</p>\n<ul>\n<li>e.g., <code class=\"gatsby-code-text\">_isHovered</code></li>\n</ul>\n</li>\n<li>\n<p>Mixed modifier (<code class=\"gatsby-code-text\">_type_value</code>)</p>\n<ul>\n<li>e.g., <code class=\"gatsby-code-text\">_color_error</code></li>\n<li>Note that the modifier shouldn’t mimic a CSS property, like in the example <code class=\"gatsby-code-text\">_color_green</code>. Class names are not style values.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"follow-the-bem-methodology\"><a href=\"#follow-the-bem-methodology\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Follow The BEM Methodology</h2>\n<p><a href=\"http://getbem.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Get it,</a> and <a href=\"http://getbem.com/naming/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">check out the naming conventions.</a></p>\n<p>If you want to find out more about BEM in the context of ScandiPWA, read our <a href=\"https://docs.scandipwa.com/docs/coding-standard.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">BEM doc</a>.</p>\n<h2 id=\"use-sass-variables-or-css-custom-variables\"><a href=\"#use-sass-variables-or-css-custom-variables\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use Sass Variables Or CSS Custom Variables</h2>\n<p>Sass variables are easy to simple: <code class=\"gatsby-code-text\">$&lt;name&gt;: &lt;value&gt;;</code> and that’s it. After making this style variable you can refer to it using the variable name, instead of the value.</p>\n<p>Read more about Sass variables <a href=\"https://sass-lang.com/documentation/variables\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<p>You can declare custom variables for later usage in the <code class=\"gatsby-code-text\">:root</code> element. Note that the variable names should be unique throughout the application. Context specific name usage is recommended.</p>\n<p>In the case of CSS the property notation is as follows. Declaration, e.g. <code class=\"gatsby-code-text\">--variable-name: value;</code>. Access happens through the <code class=\"gatsby-code-text\">var()</code> function, e.g. <code class=\"gatsby-code-text\">var(--variable-name);</code>.</p>\n<p>You can read more about using CSS custom variables <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<h2 id=\"dont-write-vendor-prefixes\"><a href=\"#dont-write-vendor-prefixes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Don’t Write Vendor Prefixes</h2>\n<p>In the development set-up ScandiPWA uses <code class=\"gatsby-code-text\">webpack</code> which has a <code class=\"gatsby-code-text\">postcss-loader</code> with an <code class=\"gatsby-code-text\">autoprefixer</code> plug-in that will add the vendor prefixes for you.</p>\n<h2 id=\"use-stylelint\"><a href=\"#use-stylelint\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use StyleLint</h2>\n<p>Follow the style conventions used in ScandiPWA files to ensure consistency. Check out our guide on how to get started with ESlint and StyleLint <a href=\"https://docs.scandipwa.com/docs/eslint-stylelint.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<h2 id=\"prefer-rem-units-for-content-specific-elements\"><a href=\"#prefer-rem-units-for-content-specific-elements\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prefer <code class=\"gatsby-code-text\">rem</code> Units For Content Specific Elements</h2>\n<p><code class=\"gatsby-code-text\">Rem</code> units are a type of relative sizing units for CSS. <code class=\"gatsby-code-text\">1rem</code> unit is equal to the value of <code class=\"gatsby-code-text\">font-size</code> on an HTML element, which is 16px for most browsers. If you want to really dig into <code class=\"gatsby-code-text\">rem</code> units, check out <a href=\"https://www.sitepoint.com/understanding-and-using-rem-units-in-css/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">this</a> article.</p>\n<p>Note that <code class=\"gatsby-code-text\">rem</code> units are used only for content specific elements, e.g. buttons, not graphic elements like logos.</p>\n<h2 id=\"know-the-defaults-and-utilities\"><a href=\"#know-the-defaults-and-utilities\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Know The Defaults And Utilities</h2>\n<p>Check out <code class=\"gatsby-code-text\">_reset.scss</code> to find out the ScandiPWA default values and develop accordingly.</p>\n<p>Check out our <code class=\"gatsby-code-text\">_abstract.scss</code> file to see what style values or mixins are already available.</p>\n<p>Use the <code class=\"gatsby-code-text\">_loader.scss</code> for elements you don’t want to render, but you would like to extend. </p>\n<p>There are also button and icon mixins available. If you have some more abstracts that you’d like to reuse go ahead and add them to the <code class=\"gatsby-code-text\">_abstracts.scss</code>. Make sure to check out our guide for adding abstracts <a href=\"https://docs.scandipwa.com/docs/extension.html#overriding-the-styles\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>","frontmatter":{"title":"Best Practices For Working With Styles"},"fields":{"path":"content/docs/best-practices-styles.md","slug":"/docs/best-practices-styles.html"}}},"pageContext":{"slug":"/docs/best-practices-styles.html"}},"staticQueryHashes":[]}