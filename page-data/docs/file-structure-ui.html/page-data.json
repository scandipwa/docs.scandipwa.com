{"componentChunkName":"component---src-templates-docs-js","path":"/docs/file-structure-ui.html","result":{"data":{"markdownRemark":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <div class=\"video\"> <iframe src=\"https://www.youtube.com/embed/LcM3DlQ8TbU\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div> </div>\n<p>Topics covered in this tutorial:</p>\n<ol>\n<li><a href=\"#theme-folder-structure-review-installed-via-scandipwa-installer\">Theme folder structure review (installed via scandipwa-installer)</a></li>\n<li><a href=\"#explanation-of-package-defined-scripts\">Explanation of package defined scripts</a></li>\n<li><a href=\"#explanation-of-pm2-watch-process-which-is-run-by-frontend-container\">Explanation of PM2 watch process (which is run by frontend container)</a></li>\n<li><a href=\"#details-of-issues-with-simple-watch-process-and-fallback-plugin\">Details of issues with simple watch process and Fallback plugin</a></li>\n<li><a href=\"#overriding-with-fallback-plugin\">Overriding with Fallback Plugin</a></li>\n<li><a href=\"#configuring-editor-workspace-to-include-both-theme-folder-and-source-folder\">Configuring editor workspace to include both theme folder and source folder</a></li>\n<li><a href=\"#showcase-and-explanation-of-index-components\">Showcase and explanation of index components</a></li>\n<li><a href=\"#component-file-structure-review-container-styles-component-index\">Component file-structure review (container, styles, component, index)</a></li>\n<li><a href=\"#queries-and-their-structures-how-to-override\">Queries and their structures (how to override)</a></li>\n<li><a href=\"#global-store-related-files-review-dispatcher-action-reducer-index\">Global store related files review (dispatcher, action, reducer, index)</a></li>\n<li><a href=\"#type-definitions\">Type definitions</a></li>\n<li><a href=\"#utilities-and-their-must-get-familiars-request-query-promise\">Utilities and their must-get-familiars: Request, Query, Promise</a></li>\n<li><a href=\"#details-and-use-of-querydispatcherguide-on-testing-queries-with-graphql-playground\">Details and use of QueryDispatcherGuide on testing queries (with GraphQL playground)</a></li>\n<li><a href=\"#core-important-ui-component-review\">Core (important) UI component review</a></li>\n</ol>\n<h2 id=\"theme-folder-structure-review-installed-via-scandipwa-installer\"><a href=\"#theme-folder-structure-review-installed-via-scandipwa-installer\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Theme folder structure review (installed via scandipwa-installer)</h2>\n<p>Let’s first look at the <code class=\"gatsby-code-text\">app</code> which is created by the <a href=\"https://github.com/scandipwa/installer\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">installer</a>. The installer’s main job is to copy files from the <code class=\"gatsby-code-text\">vendor</code> folder to a folder where you’ve installed the project. </p>\n<p>Find the <code class=\"gatsby-code-text\">webpack.development.config.js</code> file. This will be the main configuration file that you’ll be concerned with while developing. </p>\n<p>You can also use the <a href=\"https://github.com/scandipwa/scandipwa-base\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ScandiPWA Docker set-up</a>.</p>\n<h2 id=\"explanation-of-package-defined-scripts\"><a href=\"#explanation-of-package-defined-scripts\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Explanation of package defined scripts</h2>\n<p>Let’s look at the scripts available in your <code class=\"gatsby-code-text\">package.json</code> file.\nThe frontend process in itself is a <code class=\"gatsby-code-text\">webpack</code> development server, which runs the <code class=\"gatsby-code-text\">pm2-watch</code> npm script. </p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"59098779896124730000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;pm2-watch&quot;: &quot;./node_modules/.bin/pm2 start process.yml --no-daemon&quot;`, `59098779896124730000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token string\">\"pm2-watch\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"./node_modules/.bin/pm2 start process.yml --no-daemon\"</span></code></pre></div>\n<p>By closer inspection you can see that it runs <code class=\"gatsby-code-text\">process.yml</code>, which runs the <code class=\"gatsby-code-text\">dev-server</code> and <code class=\"gatsby-code-text\">watch-dev-server</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"7447740351471310000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`apps:\n  - script: &quot;npm run dev-server&quot;\n  - script: &quot;npm run watch-dev-server&quot;`, `7447740351471310000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"gatsby-code-yml\"><code class=\"gatsby-code-yml\"><span class=\"token key atrule\">apps</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"npm run dev-server\"</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"npm run watch-dev-server\"</span></code></pre></div>\n<p><code class=\"gatsby-code-text\">dev-server</code> is a <code class=\"gatsby-code-text\">webpack</code> development server that is running <code class=\"gatsby-code-text\">forever</code>, i.e. restarting after failure.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"95357614023640900000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;dev-server&quot;: &quot;forever ./node_modules/webpack-dev-server/bin/`, `95357614023640900000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token string\">\"dev-server\"</span><span class=\"token builtin class-name\">:</span> \"forever ./node_modules/webpack-dev-server/bin/</code></pre></div>\n<h2 id=\"explanation-of-pm2-watch-process-which-is-run-by-frontend-container\"><a href=\"#explanation-of-pm2-watch-process-which-is-run-by-frontend-container\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Explanation of PM2 watch process (which is run by frontend container)</h2>\n<p><code class=\"gatsby-code-text\">watch-dev-server</code> is a watching program for <code class=\"gatsby-code-text\">.js</code> and <code class=\"gatsby-code-text\">.scss</code> files which restarts all <code class=\"gatsby-code-text\">forever</code> processes. This means that it will restard the compiler after you’ve created a new file.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"71345976817312720000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`&quot;watch-dev-server&quot;: &quot;SHELL=/bin/bash chokidar --silent \\&quot;src/**/*.js\\&quot; \\&quot;src/**/*.scss\\&quot;  -c \\&quot;[ '{event}' = 'add' ] || [ '{event}' = 'unlink' ] && forever restartall \\&quot;&quot;`, `71345976817312720000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token string\">\"watch-dev-server\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"SHELL=/bin/bash chokidar --silent <span class=\"token entity\" title=\"\\&quot;\">\\\"</span>src/**/*.js<span class=\"token entity\" title=\"\\&quot;\">\\\"</span> <span class=\"token entity\" title=\"\\&quot;\">\\\"</span>src/**/*.scss<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>  -c <span class=\"token entity\" title=\"\\&quot;\">\\\"</span>[ '{event}' = 'add' ] || [ '{event}' = 'unlink' ] &amp;&amp; forever restartall <span class=\"token entity\" title=\"\\&quot;\">\\\"</span>\"</span></code></pre></div>\n<h2 id=\"details-of-issues-with-simple-watch-process-and-fallback-plugin\"><a href=\"#details-of-issues-with-simple-watch-process-and-fallback-plugin\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Details of issues with simple watch process and Fallback plugin</h2>\n<p>If you only run <code class=\"gatsby-code-text\">watch</code> and <code class=\"gatsby-code-text\">dev-server</code> the <code class=\"gatsby-code-text\">FallbackPlugin</code>, which rewrites files, won’t function. If you create a new file which is meant to override a previous file that <code class=\"gatsby-code-text\">webpack</code> was referencing it will fail to override. You must restart the dev server for the changes to take place. This is why <code class=\"gatsby-code-text\">watch-dev-server</code> is needed.</p>\n<h2 id=\"overriding-with-fallback-plugin\"><a href=\"#overriding-with-fallback-plugin\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overriding with Fallback Plugin</h2>\n<p><code class=\"gatsby-code-text\">FallbackPlugin</code> let’s you fall back to a file if it doesn’t exist. If we want to override a vendor file we have to put it in the same directory as previously. For vendor files it would be the <code class=\"gatsby-code-text\">vendor/scandipwa/source</code> directory.</p>\n<h2 id=\"configuring-editor-workspace-to-include-both-theme-folder-and-source-folder\"><a href=\"#configuring-editor-workspace-to-include-both-theme-folder-and-source-folder\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuring editor workspace to include both theme folder and source folder</h2>\n<p>It would be recommended to add the <code class=\"gatsby-code-text\">source</code> folder to your workspace for ease of use. If you have both the <code class=\"gatsby-code-text\">pwa</code> and <code class=\"gatsby-code-text\">source</code> folders added to your workspace you can easily deduce that the file structure in both is quite similar. </p>\n<h2 id=\"showcase-and-explanation-of-index-components\"><a href=\"#showcase-and-explanation-of-index-components\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Showcase and explanation of index components</h2>\n<p>The file <code class=\"gatsby-code-text\">source/app/index.js</code> is the entry point for your project’s application. It defines a provider for Redux with <code class=\"gatsby-code-text\">AppRouter</code> as a child component. App router is the <code class=\"gatsby-code-text\">src/app/route/index.js</code>.</p>\n<h2 id=\"component-file-structure-review-container-styles-component-index\"><a href=\"#component-file-structure-review-container-styles-component-index\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component file-structure review (container, styles, component, index)</h2>\n<p>Let’s look at the <code class=\"gatsby-code-text\">CartPage.component.js</code>. This file contains some render methods and references to props. In order to efficiently manipulate the props we have the <code class=\"gatsby-code-text\">container.js</code> files which allow you to define some additional functions for your components. The component file also includes the styles which can be overriden in the same way as the components. The component’s file folder also includes an <code class=\"gatsby-code-text\">index.js</code> which is simply forwarding the export of page container or page container.</p>\n<h2 id=\"queries-and-their-structures-how-to-override\"><a href=\"#queries-and-their-structures-how-to-override\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Queries and their structures (how to override)</h2>\n<p><code class=\"gatsby-code-text\">query.js</code> file query the GraphQL server. By opening the <code class=\"gatsby-code-text\">ProductList.query.js</code> file we can see that the <code class=\"gatsby-code-text\">ProductList</code> query is initialized by <code class=\"gatsby-code-text\">getQuery</code>.</p>\n<p>Methods that are preceded by an underscore are the so-called private methods, e.g. <code class=\"gatsby-code-text\">_getProductsField</code>. These methods are not callable. Since we can’t scope the methods in JavaScript by declaring that they are public or private, we use naming conventions.</p>\n<p>You can override the methods by copying the files, placing them in the same place, except in the <code class=\"gatsby-code-text\">pwa</code> folder and extending the methods. Notice that the class exports a new instance of an object, which means that in order to rewrite it you need to import the product list query as a class, not the pruduct list query as default.</p>\n<h2 id=\"global-store-related-files-review-dispatcher-action-reducer-index\"><a href=\"#global-store-related-files-review-dispatcher-action-reducer-index\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Global store related files review (dispatcher, action, reducer, index)</h2>\n<p><code class=\"gatsby-code-text\">store</code> is meant for global state manipulation. Here you see all the folders containing <code class=\"gatsby-code-text\">.reducer.js</code> and other files that are grouped together.</p>\n<p>The reducer is responsible for managing state updates for dispatched actions. Actions are simple declarations that will be later called upon at runtime. Dispatcher is responsible for handling the updates. The methods of this file are called to update the state. The index file forwards different exports to the other components, so you could reference them by simply writing <code class=\"gatsby-code-text\">store/Breadcrumbs</code>.</p>\n<h2 id=\"type-definitions\"><a href=\"#type-definitions\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Type definitions</h2>\n<p>You can find types in the <code class=\"gatsby-code-text\">type</code> folder. These are files containing useful things that can be declared as <code class=\"gatsby-code-text\">propTypes</code>.</p>\n<p>You can override types by importing all of them, changing what you want and exporting them back.</p>\n<h2 id=\"utilities-and-their-must-get-familiars-request-query-promise\"><a href=\"#utilities-and-their-must-get-familiars-request-query-promise\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Utilities and their must-get-familiars: Request, Query, Promise</h2>\n<p>Utilities are helper functions. One of the must-know utilities is the Request utility, because it contains everything you might need to make a request. It exports <code class=\"gatsby-code-text\">executePost</code>, <code class=\"gatsby-code-text\">executeGet</code> and <code class=\"gatsby-code-text\">listenForBroadcast</code>.</p>\n<p><code class=\"gatsby-code-text\">executeGet</code> is used for all cachable things and it takes three parameters.</p>\n<p><code class=\"gatsby-code-text\">queryObject</code> which you can create by using files in the <code class=\"gatsby-code-text\">query</code> folder. <code class=\"gatsby-code-text\">name</code> is the name of the model to which service worker will send the broadcast updates to. This is useful when you want to immediately supply the client with data, while waiting for the server to give you real-time data with which the state gets updated.</p>\n<p><code class=\"gatsby-code-text\">cacheTTL</code> is the cache lifespan in seconds for service worker to cache responses. This is also used for Varnish in some set-ups. Make sure to put here a real value like the month or date etc.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"19680576810993824000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`export const executeGet = (queryObject, name, cacheTTL)`, `19680576810993824000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> executeGet <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>queryObject<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> cacheTTL<span class=\"token punctuation\">)</span></code></pre></div>\n<p>The request folder also contains query dispatcher which is the dispatcher type for <code class=\"gatsby-code-text\">store</code> which makes it easier to make requests. By going into <code class=\"gatsby-code-text\">app/store/Category.dispatcher.js</code> you can see that the category dispatcher is extending the query dispatcher and implements only <code class=\"gatsby-code-text\">onSuccess</code>, <code class=\"gatsby-code-text\">onError</code> and <code class=\"gatsby-code-text\">prepareRequest</code> which returns back the query or array of queries.</p>\n<p>The <code class=\"gatsby-code-text\">fetchQuery</code> function is made for when you need a POST request to get customer data. This is not a cachable request, so instead of <code class=\"gatsby-code-text\">executeGet</code> you run <code class=\"gatsby-code-text\">fetchQuery</code>.</p>\n<p>In order to simplify cancelling promises we’ve also implemented a <code class=\"gatsby-code-text\">MakeCancelable.js</code> utility for cancelling promises. You can call this utility to make a promise cancelable at any time.</p>\n<h2 id=\"details-and-use-of-querydispatcherguide-on-testing-queries-with-graphql-playground\"><a href=\"#details-and-use-of-querydispatcherguide-on-testing-queries-with-graphql-playground\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Details and use of QueryDispatcherGuide on testing queries (with GraphQL playground)</h2>\n<p>If you want to familiarize yourself with GraphQL Playground, you can do so <a href=\"https://docs.scandipwa.com/docs/postman-graphql-playground.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<h2 id=\"core-important-ui-component-review\"><a href=\"#core-important-ui-component-review\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Core (important) UI component review</h2>\n<p>The field component can be found in <code class=\"gatsby-code-text\">app/component/field</code> directory. This component can render multiple types of fields:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"45851706790118230000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// renderable fields\nCHECKBOX_TYPE,\nNUMBER_TYPE,\nPASSWORD_TYPE,\nRADIO_TYPE,\nSELECT_TYPE,\nTEXTAREA_TYPE`, `45851706790118230000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// renderable fields</span>\n<span class=\"token constant\">CHECKBOX_TYPE</span><span class=\"token punctuation\">,</span>\n<span class=\"token constant\">NUMBER_TYPE</span><span class=\"token punctuation\">,</span>\n<span class=\"token constant\">PASSWORD_TYPE</span><span class=\"token punctuation\">,</span>\n<span class=\"token constant\">RADIO_TYPE</span><span class=\"token punctuation\">,</span>\n<span class=\"token constant\">SELECT_TYPE</span><span class=\"token punctuation\">,</span>\n<span class=\"token constant\">TEXTAREA_TYPE</span></code></pre></div>\n<p>We can see this in action by going to the ScandiPWA <a href=\"demo.scandipwa.com\">demo website</a> and adding a product to our cart. After this we’ll go to check out and we’ll see the simple input types for text.</p>\n<p>If you go to a product’s page, you can enter a quantity value which is the number input type or <code class=\"gatsby-code-text\">NUMBER_TYPE</code>. The maximum allowed value here is 99.</p>\n<p>So, this is the field component, it allows us to have input type rendering with wrappers like labels and messages. The messages can be controlled by either the field component or a form <code class=\"gatsby-code-text\">Form.component.js</code>. </p>\n<p>Let’s look at the form component a little closer. If we go to <code class=\"gatsby-code-text\">CheckoutShipping.component.js</code> we see that this has a render method that has a form. This form component allows you to submit the form and get all the inputs back to you and validate them if the validation prop has been passed to the field. The validation messages can be seen in <code class=\"gatsby-code-text\">Form.config.js</code>.</p>\n<p>The <code class=\"gatsby-code-text\">Draggable.component.js</code> allows for mouse and touchpad manipulations. Here you can see the draggable prop types like <code class=\"gatsby-code-text\">onDrag</code> etc. This is useful if you want to implement a slider. ScandiPWA also has a slider component that’s written on top of the draggable component and it’s purely responsible for rendering the children slides.</p>\n<p>The slider in itself doesn’t implement any breadcrumbs or thumbnails. They need to be implemented separately. </p>\n<p>Additionally we have <code class=\"gatsby-code-text\">ExpandableContent</code> which is a component that allows for content expansion and hiding when changing devices. </p>\n<p><code class=\"gatsby-code-text\">Header</code> is a complex UI component, because it has history. This allows for search and filters to be applied. Each of the render methods in this file is mapped and you can explore further by looking at the <code class=\"gatsby-code-text\">Header.component.js</code> file.</p>\n<p>The header also has a container that receives info from the global application:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"2571871950408488400\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`/** @namespace Component/Header/Container/mapDispatchToProps */\nexport const mapDispatchToProps = (dispatch) => ({\n    showOverlay: (overlayKey) => dispatch(toggleOverlayByKey(overlayKey)),\n    hideActiveOverlay: () => dispatch(hideActiveOverlay()),\n    setNavigationState: (stateName) => dispatch(changeNavigationState(TOP_NAVIGATION_TYPE, stateName)),\n    goToPreviousNavigationState: () => dispatch(goToPreviousNavigationState(TOP_NAVIGATION_TYPE))\n});`, `2571871950408488400`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">/** @namespace Component/Header/Container/mapDispatchToProps */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mapDispatchToProps</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">dispatch</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">showOverlay</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">overlayKey</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">toggleOverlayByKey</span><span class=\"token punctuation\">(</span>overlayKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">hideActiveOverlay</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">hideActiveOverlay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">setNavigationState</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">stateName</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">changeNavigationState</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TOP_NAVIGATION_TYPE</span><span class=\"token punctuation\">,</span> stateName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">goToPreviousNavigationState</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token function\">goToPreviousNavigationState</span><span class=\"token punctuation\">(</span><span class=\"token constant\">TOP_NAVIGATION_TYPE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If we go to the <code class=\"gatsby-code-text\">Overlay.component.js</code> we can see the mechanics of overlaying content on a page. Overlay in action can be seen when using a smaller screen, like phone. Toggling the search and navigation functions will create an overlay on the original content. Only one overlay can be opened per page and this can be seen by alternating between ‘Menu’ and ‘Search’. </p>\n<p><code class=\"gatsby-code-text\">NotificationList</code> and <code class=\"gatsby-code-text\">Notification</code> show us when we add and remove a product from a cart by creating a pop-up. There can be multiple pop-ups per page as they will stack under one another. </p>\n<p><code class=\"gatsby-code-text\">Image.component.js</code> is responsible for image rendering. It has internal state in it which is useful when we can’t find an image or don’t have an image specified. You can rewrite these frontend placeholders as you wish.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"66093240434971650000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`case IMAGE_NOT_FOUND:\n  return this.renderImageNotFound();\ncase IMAGE_NOT_SPECIFIED:\n   return (\n    <span block=&quot;Image&quot; elem=&quot;Content&quot;>{ __('Image not specified') }</span>\n      );\n...`, `66093240434971650000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">case</span> <span class=\"token constant\">IMAGE_NOT_FOUND</span><span class=\"token operator\">:</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">renderImageNotFound</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">case</span> <span class=\"token constant\">IMAGE_NOT_SPECIFIED</span><span class=\"token operator\">:</span>\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">elem</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Image not specified'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<p>We also have <code class=\"gatsby-code-text\">Link.component.js</code> which is a UI component. This allows you to render links of different types, such as 3rd party links. Notice that you can also use the BEM method to render a link.</p>\n<p>The <code class=\"gatsby-code-text\">Meta.component.js</code> allows you to provide additional metatags to the head of a document, such as title, description and keywords.</p>\n<p><code class=\"gatsby-code-text\">TextPlaceholder</code> is a simple component that allows you to have placeholders for text. This can be seen by going to a product’s page. After content gets passed to it, it renders.</p>\n<p>You’ll notice that brands are also not rendered. This occurs due to the fact that brands are not set as visible on frontend. To fix this you need to go to your page’s admin panel <code class=\"gatsby-code-text\">scandipwa.local/admin</code> and make the element visible in frontend.</p>\n<p>We can access the admin page by making a trust certificate which is done by running <code class=\"gatsby-code-text\">make cert</code> in terminal. After this you need to import it into the system which is done by <code class=\"gatsby-code-text\">trust anchor &lt;path-to-certificate&gt;</code>, e.g. <code class=\"gatsby-code-text\">trust anchor opt/cert/scandipwa-ca.pem</code> and then <code class=\"gatsby-code-text\">sudo trust extract-compatible</code>. After this the certificate should be trusted.</p>\n<p>Make sure to check out what the specific command for your system are. The previous sequence was proven to be working on Arch linux.</p>\n<p>If the connection still isn’t trusted open Chrome’s settings, go to ‘Manage certificates’ - ‘Authorities’ and import the <code class=\"gatsby-code-text\">scandipwa-ca.pem</code> file and select trust certificate for identifying websites.</p>\n<p>If you go to <code class=\"gatsby-code-text\">scandipwa.local/admin</code> you should be able to enter the username which is <code class=\"gatsby-code-text\">admin</code> and the password that can be found in the <code class=\"gatsby-code-text\">.application</code> file. You can easily find it by running <code class=\"gatsby-code-text\">cat .application</code> in terminal and you’ll see the <code class=\"gatsby-code-text\">MAGENTO_PASSWORD</code>.</p>","frontmatter":{"title":"File structure and UI components"},"fields":{"path":"content/docs/file-structure-ui.md","slug":"/docs/file-structure-ui.html"}}},"pageContext":{"slug":"/docs/file-structure-ui.html"}},"staticQueryHashes":[]}