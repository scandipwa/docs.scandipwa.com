{"componentChunkName":"component---src-templates-docs-js","path":"/docs/rewriting-extending.html","result":{"data":{"markdownRemark":{"html":"<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <div class=\"video\"> <iframe src=\"https://www.youtube.com/embed/TW31C4HbfC4\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div> </div>\n<ol>\n<li><a href=\"#structured-data-explanation-and-testing-example\">Structured data explanation and testing example</a></li>\n<li><a href=\"#pagination-implementation-details\">Pagination implementation details</a></li>\n<li><a href=\"#style-structure-abstract-folder\">Style structure (abstract folder)</a></li>\n<li><a href=\"#mention-of-coding-standards\">Mention of coding standards</a></li>\n<li><a href=\"#guide-to-rewriting\">Guide to rewriting</a></li>\n<li><a href=\"#rewriting-simple-components-like-header\">Rewriting simple components like Header</a></li>\n<li><a href=\"#overriding-and-extending-the-styles\">Overriding and extending the styles</a></li>\n<li><a href=\"#creating-a-new-page-and-adding-it-to-the-router\">Creating a new page and adding it to the router</a></li>\n<li><a href=\"#creating-a-container-with-connection-to-global-state\">Creating a container with connection to global state</a></li>\n<li><a href=\"#extending-the-header-business-logic-its-state\">Extending the Header business logic (its state)</a></li>\n</ol>\n<h2 id=\"structured-data-explanation-and-testing-example\"><a href=\"#structured-data-explanation-and-testing-example\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Structured data explanation and testing example</h2>\n<p>We can go to a page in <code class=\"gatsby-code-text\">scandipwa.local</code>, Inspect it and copy the HTML. After this when going to <a href=\"https://search.google.com/structured-data/testing-tool\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Google schema checker</a> we’ll be able to see info about the organization. This information is originally declared in the <code class=\"gatsby-code-text\">Header.component.js</code> file.</p>\n<p>Additionally we’ll see the breadcrumbs list, multiple products and their details. This info in useful when you want to see your product readily selectable from a Google search.</p>\n<h2 id=\"pagination-implementation-details\"><a href=\"#pagination-implementation-details\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pagination implementation details</h2>\n<p>Go to <code class=\"gatsby-code-text\">scandipwa.local</code> woman’s section and you’ll see pagination happening while scrolling to the bottom of the page. Notice the URL changes while scrolling. After reloading the site will display only the current page, with the option to ‘Load previous’.</p>\n<p>This is important for Google’s crawlers. This way they’ll receive only one page at a time.</p>\n<h2 id=\"style-structure-abstract-folder\"><a href=\"#style-structure-abstract-folder\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Style structure (abstract folder)</h2>\n<p>The <code class=\"gatsby-code-text\">app/style</code> is divided in abstract and base styles. Abstract styles mean that these files contain no real selector declarations. These styles are available to any component’s style.</p>\n<p>For example, the <code class=\"gatsby-code-text\">Breadcrumb.style.scss</code> file contains:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"2623815593632961000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`@include before-desktop {\n  --breadcrumbs-background: #fff;\n\n  display: none;\n}`, `2623815593632961000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token keyword\">@include</span> <span class=\"token selector\">before-desktop </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--breadcrumbs-background</span><span class=\"token punctuation\">:</span> #fff<span class=\"token punctuation\">;</span>\n\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Which is included in the <code class=\"gatsby-code-text\">app/style/abstract/_media.scss</code> file as:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"90545989548528620000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`@mixin before-desktop {\n    @media (max-width: 1024px) {\n        @content;\n    }\n}`, `90545989548528620000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token keyword\">@mixin</span> <span class=\"token selector\">before-desktop </span><span class=\"token punctuation\">{</span>\n    <span class=\"token atrule\"><span class=\"token rule\">@media</span> <span class=\"token punctuation\">(</span><span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 1024px<span class=\"token punctuation\">)</span></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">@content</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Refrain from declaring things in the <code class=\"gatsby-code-text\">abstract</code> files. This will lead to your declaration appearing in multiple component’s styles that had used the abstraction.</p>\n<p>The <code class=\"gatsby-code-text\">style/base</code> folder contains the default styles that you’ll encounter. This folder contains styles for simple HTML elements without classes.</p>\n<h2 id=\"mention-of-coding-standards\"><a href=\"#mention-of-coding-standards\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mention of coding standards</h2>\n<p>Check out our docs on code standards - <a href=\"https://docs.scandipwa.com/docs/react-best-practices.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">React</a>, <a href=\"https://docs.scandipwa.com/docs/best-practices-styles.html%5B\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">styles</a> and <a href=\"https://docs.scandipwa.com/docs/coding-standard.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">BEM</a>. These docs are made on the basis of compiling the most common code review issues on ScandiPWA.</p>\n<h2 id=\"guide-to-rewriting\"><a href=\"#guide-to-rewriting\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Guide to rewriting</h2>\n<p>Let’s look at an example where we want to change the logo ‘ScandiPWA’ in <code class=\"gatsby-code-text\">scandipwa.local</code>. </p>\n<p>First, find <code class=\"gatsby-code-text\">Header.component.js</code> to find out where the header is located in <code class=\"gatsby-code-text\">source</code>. In this case it’s located in <code class=\"gatsby-code-text\">app/component/Header</code>.</p>\n<p>Go to your theme’s app <code class=\"gatsby-code-text\">pwa/src/app</code> and create a new folder called <code class=\"gatsby-code-text\">component</code> and in it a <code class=\"gatsby-code-text\">Header</code> folder. After this you can check if the application compiles successfully by running the alias <code class=\"gatsby-code-text\">dcf logs -f --tail-100 frontend</code>. Use the <code class=\"gatsby-code-text\">tail</code> flag to only see the last 100 lines of the log file.</p>\n<p>You can read more about the ScandiPWA permanent aliases <a href=\"https://docs.scandipwa.com/docs/linux.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>. </p>\n<p>To override the original header, add a <code class=\"gatsby-code-text\">Header.component.js</code> to your newly created folder.</p>\n<p>It’s important to import from the component, because otherwise you might import the container or something else that you have not specifically asked for.</p>\n<p>This is what your new header file will have to contain:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"6167804389021337000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React from 'react';\n\n// imports the original header from vendor folder\nimport SourceHeader from \\`SourceComponent/Header/Header.component';\n\n// imports Link from your theme; or vendor folder if not found in theme\nimport Link from 'Component/Link';\n\n// export everything from the source header\nexport * from \\`SourceComponent/Header/Header.component';\n\nclass Header extends SourceHeader {\n// original method copied from source header file\n      renderLogo(isVisible = false) {\n        const { isLoading } = this.props;\n\n        if (isLoading) {\n            return null;\n        }\n\n        return (\n            <Link\n              to=&quot;/&quot;\n              aria-label=&quot;Go to homepage by clicking on ScandiPWA logo&quot;\n              aria-hidden={ !isVisible }\n              tabIndex={ isVisible ? 0 : -1 }\n              block=&quot;Header&quot;\n              elem=&quot;LogoWrapper&quot;\n              mods={ { isVisible } }\n              key=&quot;logo&quot;\n            >\n            {/* this is our customization */}\n                <span>Alfred</span>\n            </Link>\n        );\n    }\n}\n\nexport default Header;`, `6167804389021337000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// imports the original header from vendor folder</span>\n<span class=\"token keyword\">import</span> SourceHeader <span class=\"token keyword\">from</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">SourceComponent/Header/Header.component';\n\n// imports Link from your theme; or vendor folder if not found in theme\nimport Link from 'Component/Link';\n\n// export everything from the source header\nexport * from </span><span class=\"token template-punctuation string\">`</span></span>SourceComponent<span class=\"token operator\">/</span>Header<span class=\"token operator\">/</span>Header<span class=\"token punctuation\">.</span>component'<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SourceHeader</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// original method copied from source header file</span>\n      <span class=\"token function\">renderLogo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">isVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isLoading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLoading<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span>\n              <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Go to homepage by clicking on ScandiPWA logo<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">aria-hidden</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">!</span>isVisible <span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">tabIndex</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> isVisible <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Header<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">elem</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LogoWrapper<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">mods</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span> isVisible <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* this is our customization */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Alfred</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Header<span class=\"token punctuation\">;</span></code></pre></div>\n<p>After doing this we wait for the dev server reload and we’ll be able to see our changes on <code class=\"gatsby-code-text\">scandipwa.local</code>. Instead of the ScandiPWA logo, the homepage now should have ‘Alfred’ as a link in place.</p>\n<h2 id=\"overriding-and-extending-the-styles\"><a href=\"#overriding-and-extending-the-styles\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overriding and extending the styles</h2>\n<p>A plain link text doesn’t look so great, so let’s change the styles as well. You can approach styling in two ways - completely overriding them or extending them.</p>\n<p>In order to not have code duplications in the project, let’s extend the style file. The same way as previously make a <code class=\"gatsby-code-text\">Header.style.scss</code> file in the <code class=\"gatsby-code-text\">pwa/src/app/component/Header</code> folder.\nIf your file contains the following:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"22307632170471158000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`.Header{\n\n}`, `22307632170471158000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token selector\">.Header</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You’ll see that the header in <code class=\"gatsby-code-text\">scandipwa.local</code> will have been completely overriden. So, we recommend to instead name the new style file <code class=\"gatsby-code-text\">Header.override.style.scss</code>. It is important to stick to the naming convention in order for the fallback mechanism to work. So, the style file name should be <code class=\"gatsby-code-text\">&lt;name&gt;.override.style.scss</code>.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"94422170864935530000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`.Header{\n  &-Logo{\n    width: min-content;\n    height: auto;\n  }\n}`, `94422170864935530000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token selector\">.Header</span><span class=\"token punctuation\">{</span>\n  <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>-Logo</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> min-content<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Let’s also declare BEM properties for span inside <code class=\"gatsby-code-text\">Header.component.js</code>:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"61375359713125660000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React from 'react';\nimport SourceHeader from \\`SourceComponent/Header/Header.component';\nimport Link from 'Component/Link';\nexport * from \\`SourceComponent/Header/Header.component';\n\nclass Header extends SourceHeader {\n// original method copied from source header file\n      renderLogo(isVisible = false) {\n        const { isLoading } = this.props;\n\n        if (isLoading) {\n            return null;\n        }\n\n        return (\n            <Link\n              to=&quot;/&quot;\n              aria-label=&quot;Go to homepage by clicking on ScandiPWA logo&quot;\n              aria-hidden={ !isVisible }\n              tabIndex={ isVisible ? 0 : -1 }\n              block=&quot;Header&quot;\n              elem=&quot;LogoWrapper&quot;\n              mods={ { isVisible } }\n              key=&quot;logo&quot;\n            >\n            {/* this is our customization */}\n                <span\n                block=&quot;Header&quot;\n                elem=&quot;MyName&quot;\n                >Alfred</span>\n            </Link>\n        );\n    }\n}\n\nexport default Header;`, `61375359713125660000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SourceHeader <span class=\"token keyword\">from</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">SourceComponent/Header/Header.component';\nimport Link from 'Component/Link';\nexport * from </span><span class=\"token template-punctuation string\">`</span></span>SourceComponent<span class=\"token operator\">/</span>Header<span class=\"token operator\">/</span>Header<span class=\"token punctuation\">.</span>component'<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SourceHeader</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// original method copied from source header file</span>\n      <span class=\"token function\">renderLogo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">isVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isLoading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLoading<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span>\n              <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Go to homepage by clicking on ScandiPWA logo<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">aria-hidden</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">!</span>isVisible <span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">tabIndex</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> isVisible <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Header<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">elem</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LogoWrapper<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">mods</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span> isVisible <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* this is our customization */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span>\n                <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Header<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">elem</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MyName<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Alfred</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Header<span class=\"token punctuation\">;</span></code></pre></div>\n<p>You can read more about BEM <a href=\"https://docs.scandipwa.com/docs/coding-standard.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>. </p>\n<p>The <code class=\"gatsby-code-text\">MyName</code> element then can be styled in the <code class=\"gatsby-code-text\">Header.override.style.scss</code> file:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"53737841789530160000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`.Header {\n  &-Logo {\n    width: min-content;\n    height: min-content;\n  }\n  &-MyName {\n    color: \\$black;\n    font-size: 16px;\n    font-weight: bold;\n    text-transform: uppercase;\n    }\n  }\n}`, `53737841789530160000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token selector\">.Header </span><span class=\"token punctuation\">{</span>\n  <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>-Logo </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> min-content<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> min-content<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>-MyName </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$black</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 16px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-transform</span><span class=\"token punctuation\">:</span> uppercase<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"gatsby-code-text\">$black</code> is declared in <code class=\"gatsby-code-text\">_variables.scss</code> file. After writing out your style, don’t forget to import it in the <code class=\"gatsby-code-text\">Header.component.js</code> file. So, the imports will look like this:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"16139021416803324000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React from 'react';\nimport SourceHeader from \\`SourceComponent/Header/Header.component';\nimport Link from 'Component/Link';\nimport './Header.override.style.scss';`, `16139021416803324000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SourceHeader <span class=\"token keyword\">from</span> `SourceComponent<span class=\"token operator\">/</span>Header<span class=\"token operator\">/</span>Header<span class=\"token punctuation\">.</span>component'<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Link <span class=\"token keyword\">from</span> <span class=\"token string\">'Component/Link'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./Header.override.style.scss'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The dot at the start of the path signifies that the <code class=\"gatsby-code-text\">Header.component.js</code> should look for the import in the same folder where it’s located.</p>\n<p>If you want to remove the brand rendering from the product card find the <code class=\"gatsby-code-text\">ProductCard.component.js</code> and create a new folder, just like with the <code class=\"gatsby-code-text\">Header</code> folder. So, just the sake of repetition, you create in the following path: <code class=\"gatsby-code-text\">pwa/src/app/component/ProductCard</code>. In this folder create a <code class=\"gatsby-code-text\">ProductCard.component.js</code> file that will be meant for overriding the <code class=\"gatsby-code-text\">source</code> component. The skeleton of the code will be fairly similar to the previous header example.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"23023433712942354000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React from 'react';\nimport SourceProductCard from \\`SourceComponent/ProductCard/ProductCard.component';\nexport * from \\`SourceComponent/ProductCard/ProductCard.component';\n\nclass ProductCard extends SourceProductCard {\n\n}\nexport default ProductCard;`, `23023433712942354000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SourceProductCard <span class=\"token keyword\">from</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">SourceComponent/ProductCard/ProductCard.component';\nexport * from </span><span class=\"token template-punctuation string\">`</span></span>SourceComponent<span class=\"token operator\">/</span>ProductCard<span class=\"token operator\">/</span>ProductCard<span class=\"token punctuation\">.</span>component'<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductCard</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SourceProductCard</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ProductCard<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now we have to look where the brand is rendered in the source <code class=\"gatsby-code-text\">ProductCard</code> and copy that code into our new file.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"54315240340018270000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React from 'react';\nimport SourceProductCard from \\`SourceComponent/ProductCard/ProductCard.component';\nexport * from \\`SourceComponent/ProductCard/ProductCard.component';\n\nclass ProductCard extends SourceProductCard {\n    renderAdditionalProductDetails() {\n      return null;\n    }\n}\nexport default ProductCard;`, `54315240340018270000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SourceProductCard <span class=\"token keyword\">from</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">SourceComponent/ProductCard/ProductCard.component';\nexport * from </span><span class=\"token template-punctuation string\">`</span></span>SourceComponent<span class=\"token operator\">/</span>ProductCard<span class=\"token operator\">/</span>ProductCard<span class=\"token punctuation\">.</span>component'<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductCard</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SourceProductCard</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">renderAdditionalProductDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ProductCard<span class=\"token punctuation\">;</span></code></pre></div>\n<p>This will remove the brand name from the product card. We can also introduce the product card to us:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"85011987777674870000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React from 'react';\nimport SourceProductCard from \\`SourceComponent/ProductCard/ProductCard.component';\nexport * from \\`SourceComponent/ProductCard/ProductCard.component';\n\nclass ProductCard extends SourceProductCard {\n    renderAdditionalProductDetails() {\n      return (\n        <p>\n          Hi, I am a product card!\n        </p>\n      );\n    }\n}\nexport default ProductCard;`, `85011987777674870000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SourceProductCard <span class=\"token keyword\">from</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">SourceComponent/ProductCard/ProductCard.component';\nexport * from </span><span class=\"token template-punctuation string\">`</span></span>SourceComponent<span class=\"token operator\">/</span>ProductCard<span class=\"token operator\">/</span>ProductCard<span class=\"token punctuation\">.</span>component'<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ProductCard</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SourceProductCard</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">renderAdditionalProductDetails</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n          Hi, I am a product card!\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ProductCard<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now after rendering you’ll see this text under every product card.</p>\n<p>If we don’t like the look of breadcrumbs, we can try to change the style of them. Just like in all of the previous examples we need to make a new breadcrumbs folder in our app and create a style file in it. So, the folder path would be: <code class=\"gatsby-code-text\">pwa/src/app/component/Breadcrumbs</code> and the copy the source <code class=\"gatsby-code-text\">Breadcrumbs.style.scss</code> file in it for this example.</p>\n<p>Let’s change the colors. Note, that you need to keep all of the rest of the style declarations, since the file’s name is not <code class=\"gatsby-code-text\">Breadcrumbs.override.style.scss</code>.</p>\n<h2 id=\"creating-a-new-page-and-adding-it-to-the-router\"><a href=\"#creating-a-new-page-and-adding-it-to-the-router\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a new page and adding it to the router</h2>\n<p>Create a new folder in the <code class=\"gatsby-code-text\">src/app/route</code> folder to create a new page. The path will look like this <code class=\"gatsby-code-text\">src/app/route/NewPage</code>. The <code class=\"gatsby-code-text\">NewPage</code> folder should contain a <code class=\"gatsby-code-text\">NewPage.component.js</code> file and <code class=\"gatsby-code-text\">index.js</code> file.</p>\n<p>The <code class=\"gatsby-code-text\">NewPage.component.js</code> should contain:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"68590366711252296000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React, { PureComponent } from 'react';\n\nclass NewPage extends PureComponent{\n  render() {\n    return(\n      <p>Hello, this is a new route/page.</p>\n    );\n  }\n}\n\nexport default NewPage;`, `68590366711252296000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> PureComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NewPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PureComponent</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, this is a new route/page.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NewPage<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now we need to add this to <code class=\"gatsby-code-text\">NewPage/index.js</code>:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"60178326639352340000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`export { default } from './Newpage.component';`, `60178326639352340000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./Newpage.component'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>After this we need to add this additional route to the <code class=\"gatsby-code-text\"></code>Router.component.js` file in the switch items section by adding:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"44029024484882660000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`component: <Route path=&quot;/new-page&quot; exact component {NewPage} />\nposition: 11`, `44029024484882660000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">component<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/new-page\"</span> exact component <span class=\"token punctuation\">{</span>NewPage<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\nposition<span class=\"token operator\">:</span> <span class=\"token number\">11</span></code></pre></div>\n<p>Add the following to the imports:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"65074971885649215000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import NewPage from 'Route/NewPage';`, `65074971885649215000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> NewPage <span class=\"token keyword\">from</span> <span class=\"token string\">'Route/NewPage'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"creating-a-container-with-connection-to-global-state\"><a href=\"#creating-a-container-with-connection-to-global-state\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Creating a container with connection to global state</h2>\n<p>To add breadcrumbs, create a <code class=\"gatsby-code-text\">NewPage.container.js</code> file in <code class=\"gatsby-code-text\">src/app/route/NewPage</code> directory.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"78663267160661870000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import { connect } from 'react-redux';\nimport { BreadCrumbsDispatcher } from 'Store/Breadcrumbs';\n\nimport NewPage from './NewPage.component';\n\nexport const mapDispatchToProps = dispatch => ({\n  updateBreadCrumbs: breadcrumbs => BreadcrumbsDispatcher.update(breadcrumbs, dispatch)\n})\n\nexport default connect(null, mapDispatchToProps)(NewPage);`, `78663267160661870000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> connect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> BreadCrumbsDispatcher <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'Store/Breadcrumbs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> NewPage <span class=\"token keyword\">from</span> <span class=\"token string\">'./NewPage.component'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">mapDispatchToProps</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">dispatch</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function-variable function\">updateBreadCrumbs</span><span class=\"token operator\">:</span> <span class=\"token parameter\">breadcrumbs</span> <span class=\"token operator\">=></span> BreadcrumbsDispatcher<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span>breadcrumbs<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> mapDispatchToProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>NewPage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now let’s call it in <code class=\"gatsby-code-text\">NewPage.component.js</code>:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"82515463083501620000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewPage extends PureComponent{\n  constructor(props){\n    super(props);\n\n    const { updateBreadcrumbs } => props;\n    updateBreadcrumbs([\n      { url: '/new-page', name: __('New Page') },\n      { url: '/', name: __('Home') }\n    ])\n  }\n\n  render() {\n    return(\n      <main block=&quot;NewPage&quot;>\n      <p>Hello, this is a new route/page.</p>\n      </main>\n    );\n  }\n}\n\nNewPage.propTypes = {\n  updateBreadcrumbs: PropTypes.func.isRequired\n};\n\nexport default NewPage;`, `82515463083501620000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> PureComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NewPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PureComponent</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> updateBreadcrumbs <span class=\"token punctuation\">}</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">updateBreadcrumbs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'/new-page'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'New Page'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Home'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span> <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NewPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, this is a new route/page.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nNewPage<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  updateBreadcrumbs<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NewPage<span class=\"token punctuation\">;</span></code></pre></div>\n<p>We also need to change the <code class=\"gatsby-code-text\">NewPage/index.js</code> and export the container in order to not have undefined props.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"25194851780935967000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`export { default } from './Newpage.container';`, `25194851780935967000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./Newpage.container'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We can create style for the NewPage in the same manner as previously by adding a <code class=\"gatsby-code-text\">NewPage.style.scss</code> file to the <code class=\"gatsby-code-text\">NewPage</code> folder. There we need to declare the new page and style away!</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"41674470618711390000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`:root{\n  --new-page-background: red;\n}\n\n// class name is generated from the component's block\n.NewPage{\n  // style\n  background: var(--new-page-background);\n}`, `41674470618711390000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token selector\">:root</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--new-page-background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// class name is generated from the component's block</span>\n<span class=\"token selector\">.NewPage</span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// style</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--new-page-background<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Use variables in styles to be able to override the style from a parent component. Add the style to your component by adding <code class=\"gatsby-code-text\">import &#39;./NewPage.style&#39;;</code>.</p>\n<p>We can also move the content around, so we need to BEM the elements in <code class=\"gatsby-code-text\">NewPage.component.js</code>:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"36248141066599860000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewPage.style';\n\nclass NewPage extends PureComponent{\n  constructor(props){\n    super(props);\n\n    const { updateBreadcrumbs } => props;\n    updateBreadcrumbs([\n      { url: '/new-page', name: __('New Page') },\n      { url: '/', name: __('Home') }\n    ])\n  }\n\n  render() {\n    return(\n      <main block=&quot;NewPage&quot;>\n      <p block=&quot;NewPage&quot; elem=&quot;Note&quot;>Hello, this is a new route/page.</p>\n      </main>\n    );\n  }\n}\n\nNewPage.propTypes = {\n  updateBreadcrumbs: PropTypes.func.isRequired\n};\n\nexport default NewPage;`, `36248141066599860000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> PureComponent <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'./NewPage.style'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">NewPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">PureComponent</span><span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> updateBreadcrumbs <span class=\"token punctuation\">}</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">updateBreadcrumbs</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'/new-page'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'New Page'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> url<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> name<span class=\"token operator\">:</span> <span class=\"token function\">__</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Home'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>main</span> <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NewPage<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>NewPage<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">elem</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Note<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Hello, this is a new route/page.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>main</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nNewPage<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  updateBreadcrumbs<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>func<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NewPage<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Consequently in our <code class=\"gatsby-code-text\">NewPage.style.scss</code> we add:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"56877001002181830000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`:root{\n  --new-page-background: red;\n}\n\n// class name is generated from the component's block\n.NewPage {\n  background: var(--new-page-background);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  &-Note {\n    display: inline-block;\n  }\n}`, `56877001002181830000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token selector\">:root</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">--new-page-background</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// class name is generated from the component's block</span>\n<span class=\"token selector\">.NewPage </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">var</span><span class=\"token punctuation\">(</span>--new-page-background<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">justify-content</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">align-items</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>-Note </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> inline-block<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"extending-the-header-business-logic-its-state\"><a href=\"#extending-the-header-business-logic-its-state\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extending the Header business logic (its state)</h2>\n<p>Say we wanted to change stuff in the header and exchange the menu button for a ‘back’ button. Go to your header extension file <code class=\"gatsby-code-text\">Header.component.js</code></p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"98469307332882240000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import React from 'react';\nimport SourceHeader from \\`SourceComponent/Header/Header.component';\nimport Link from 'Component/Link';\nimport PropTypes from 'prop-types';\n// import prop types from source header\n\nexport * from \\`SourceComponent/Header/Header.component';\nexport const NEW_PAGE = 'new_page';\n\nclass Header extends SourceHeader {\n// overrides the source header's state map\n  constructor(props) {\n    super(props);\n\n    this.stateMap = {\n      ...this.stateMap.\n      [NEW_PAGE]: {\n        back: true\n      };\n    };\n  }\n\n      renderLogo(isVisible = false) {\n        const { isLoading } = this.props;\n\n        if (isLoading) {\n            return null;\n        }\n\n        return (\n            <Link\n              to=&quot;/&quot;\n              aria-label=&quot;Go to homepage by clicking on ScandiPWA logo&quot;\n              aria-hidden={ !isVisible }\n              tabIndex={ isVisible ? 0 : -1 }\n              block=&quot;Header&quot;\n              elem=&quot;LogoWrapper&quot;\n              mods={ { isVisible } }\n              key=&quot;logo&quot;\n            >\n                <span\n                block=&quot;Header&quot;\n                elem=&quot;MyName&quot;\n                >Alfred</span>\n            </Link>\n        );\n    }\n}\n\nHeader.propTypes = {\n  ...Header.propTypes,\n  // copy header state from source header\n  name: PropTypes.oneOf([\n    // add new page\n    NEW_PAGE\n  ])\n},\nexport default Header;`, `98469307332882240000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SourceHeader <span class=\"token keyword\">from</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">SourceComponent/Header/Header.component';\nimport Link from 'Component/Link';\nimport PropTypes from 'prop-types';\n// import prop types from source header\n\nexport * from </span><span class=\"token template-punctuation string\">`</span></span>SourceComponent<span class=\"token operator\">/</span>Header<span class=\"token operator\">/</span>Header<span class=\"token punctuation\">.</span>component'<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">NEW_PAGE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'new_page'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SourceHeader</span> <span class=\"token punctuation\">{</span>\n<span class=\"token comment\">// overrides the source header's state map</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stateMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stateMap<span class=\"token punctuation\">.</span>\n      <span class=\"token punctuation\">[</span><span class=\"token constant\">NEW_PAGE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        back<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n      <span class=\"token function\">renderLogo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">isVisible <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isLoading <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isLoading<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Link</span></span>\n              <span class=\"token attr-name\">to</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>/<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">aria-label</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Go to homepage by clicking on ScandiPWA logo<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">aria-hidden</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">!</span>isVisible <span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">tabIndex</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> isVisible <span class=\"token operator\">?</span> <span class=\"token number\">0</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Header<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">elem</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>LogoWrapper<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">mods</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span> isVisible <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>logo<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n                </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span>\n                <span class=\"token attr-name\">block</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Header<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token attr-name\">elem</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MyName<span class=\"token punctuation\">\"</span></span>\n                <span class=\"token punctuation\">></span></span><span class=\"token plain-text\">Alfred</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Link</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nHeader<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>Header<span class=\"token punctuation\">.</span>propTypes<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// copy header state from source header</span>\n  name<span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">oneOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// add new page</span>\n    <span class=\"token constant\">NEW_PAGE</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Header<span class=\"token punctuation\">;</span></code></pre></div>\n<p>In your theme’s header folder add <code class=\"gatsby-code-text\">Header.container.js</code> where we’ll need to extend the source header’s container and export everything else.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"70037530305453120000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport {\n  HeaderContainer as SourceHeaderContainer,\n  mapStateToProps,\n  mapDispatchToProps \n} from 'SourceComponent/Header/Header.container';\nimport Header, { NEW_PAGE } from 'Component/Header/Header.component';\n\nexport class HeaderContainer extends SourceHeaderContainer {\n  constructor(props) {\n    super(props);\n\n    const { history } = props;\n\n    this.routeMap = {\n      ...this.routeMap,\n      // go to home when clicking back button\n      '/new-page': { name: NEW_PAGE, onBackClick: () => history.push('/') }\n    }\n  }\n}\n\nHeaderContainer.propTypes = {\n  ...HeaderContainer.propTypes,\n  headerState: Header.propTypes.headerState\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(HeaderContainer));`, `70037530305453120000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> connect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n  HeaderContainer <span class=\"token keyword\">as</span> SourceHeaderContainer<span class=\"token punctuation\">,</span>\n  mapStateToProps<span class=\"token punctuation\">,</span>\n  mapDispatchToProps \n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'SourceComponent/Header/Header.container'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Header<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">NEW_PAGE</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'Component/Header/Header.component'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">HeaderContainer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SourceHeaderContainer</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> history <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>routeMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>routeMap<span class=\"token punctuation\">,</span>\n      <span class=\"token comment\">// go to home when clicking back button</span>\n      <span class=\"token string\">'/new-page'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token constant\">NEW_PAGE</span><span class=\"token punctuation\">,</span> <span class=\"token function-variable function\">onBackClick</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> history<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nHeaderContainer<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token operator\">...</span>HeaderContainer<span class=\"token punctuation\">.</span>propTypes<span class=\"token punctuation\">,</span>\n  headerState<span class=\"token operator\">:</span> Header<span class=\"token punctuation\">.</span>propTypes<span class=\"token punctuation\">.</span>headerState\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>mapStateToProps<span class=\"token punctuation\">,</span> mapDispatchToProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HeaderContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now, let’s add the new page to the admin dashboard. Go to <code class=\"gatsby-code-text\">scandipwa.local/admin</code> and log in. Then go to ‘Scandiweb’ - ‘Menu Manager’. Go to assigned items and add an aditional item with the title ‘New Page’. URL type is custom URL and it should be <code class=\"gatsby-code-text\">/new-page</code> and parent ‘Categories’.</p>\n<p>After this go to cache management and ‘Flush Cache Storage’. After this you should be able to navigate to your page in <code class=\"gatsby-code-text\">scandipwa.local</code>.</p>","frontmatter":{"title":"Rewriting and Extending A Theme"},"fields":{"path":"content/docs/rewriting-extending.md","slug":"/docs/rewriting-extending.html"}}},"pageContext":{"slug":"/docs/rewriting-extending.html"}},"staticQueryHashes":[]}