{"componentChunkName":"component---src-templates-docs-js","path":"/docs/extension.html","result":{"data":{"markdownRemark":{"html":"<p>ScandiPWA is not meant to be modified, rather extended. This means no changes must be done it the source theme (<code class=\"gatsby-code-text\">vendor/scandipwa/source</code>), rather changes in <code class=\"gatsby-code-text\">app/design/frontend/&lt;VENDOR&gt;/&lt;THEME&gt;</code> must be made.</p>\n<h2 id=\"watch-an-explanation-video\"><a href=\"#watch-an-explanation-video\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Watch an explanation video</h2>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <div class=\"video\"> <iframe src=\"https://www.youtube.com/embed/j2IamYU7f_M\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div> </div>\n<h2 id=\"a-step-by-step-algorithm-for-javascript\"><a href=\"#a-step-by-step-algorithm-for-javascript\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>A step-by-step algorithm for JavaScript</h2>\n<p>You create a file with the same name, under the same folder - reference the <code class=\"gatsby-code-text\">vendor/scandipwa/source</code> to find the exact name and file. But in general, the algorithm is as follows:</p>\n<ol>\n<li>\n<p><strong>Find out the component</strong> name using web-inspector. The name of the component can be found using following algorithm:</p>\n<ol>\n<li>Using inspector find an element you want to change, i.e. <code class=\"gatsby-code-text\">.Header-Button_type_menu</code> element.</li>\n<li>Because of <a href=\"https://en.bem.info/methodology/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">BEM</a> element with class <code class=\"gatsby-code-text\">.Header-Button_type_menu</code> is clearly related to <code class=\"gatsby-code-text\">Header</code> component, and <strong>must</strong> be declared there.</li>\n</ol>\n</li>\n<li>\n<p>Knowing the component name, it is time to <strong>decide what would you like to change</strong>:</p>\n<ol>\n<li>If the logic change is intended, our you plan to connect to the global state - override the <code class=\"gatsby-code-text\">&lt;COMPONENT NAME&gt;.container.js</code>.</li>\n<li>If the presentation change is intended - you need to override the <code class=\"gatsby-code-text\">&lt;COMPONENT NAME&gt;.component.js</code>.</li>\n<li>If styles are intended to change completely, you need to override the <code class=\"gatsby-code-text\">&lt;COMPONENT NAME&gt;.style.scss</code>.</li>\n<li>If you only want to adjust style, you will need to create and import new additional file - <code class=\"gatsby-code-text\">&lt;COMPONENT NAME&gt;.style.override.scss</code></li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p><strong>Note</strong>:</p>\n<p>you are required to import this new style file in <code class=\"gatsby-code-text\">&lt;COMPONENT NAME&gt;.component.js</code> or, even in <code class=\"gatsby-code-text\">&lt;COMPONENT NAME&gt;.container.js</code>, it just must be imported.</p>\n</blockquote>\n<ol start=\"3\">\n<li>\n<p>Using the <a href=\"https://github.com/scandipwa/scandipwa-development-toolkit\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">VSCode extension</a> or manually <strong>create a files with the correct name in the correct folder</strong>. The folder naming logic is as follows:</p>\n<ol>\n<li>If it is the component, not the route (i.e. <code class=\"gatsby-code-text\">ProductPage</code>, <code class=\"gatsby-code-text\">CategoryPage</code>, <code class=\"gatsby-code-text\">MyAccount</code>, <code class=\"gatsby-code-text\">Checkout</code>) you will find it in the <code class=\"gatsby-code-text\">app/component/&lt;COMPONENT NAME&gt;/</code> folder. For example, the <code class=\"gatsby-code-text\">Header</code> is located in <code class=\"gatsby-code-text\">app/component/Header/</code>.</li>\n<li>If it is a page, or a route - search for it in the <code class=\"gatsby-code-text\">app/route/&lt;COMPONENT NAME&gt;/</code>.</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p><strong>Note</strong>:</p>\n<p>there will never be a component folder nested in another component folder! The file-structure is flat, and consistent.</p>\n</blockquote>\n<ol start=\"4\">\n<li>The file is created, what next? Time to write some JavaScript. The main idea for extension - you are replacing the file, so all exposed “API”s especially <code class=\"gatsby-code-text\">export</code> must be preserved. The general template looks as follows:</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"69590106695187480000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import { /** Exports I plan to modify or reuse */ } from '<PATH TO SOURCE COMPONENT>';\n\n// TODO: implement the modifications to imported parts\n\nexport { /** Export all unmodified exports */ } from '<PATH TO SOURCE COMPONENT>';\n\nexport { /** Exports I have overridden */ };\n\nexport default /** copy the original default export */;`, `69590106695187480000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/** Exports I plan to modify or reuse */</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'&lt;PATH TO SOURCE COMPONENT>'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// TODO: implement the modifications to imported parts</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/** Export all unmodified exports */</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'&lt;PATH TO SOURCE COMPONENT>'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/** Exports I have overridden */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token comment\">/** copy the original default export */</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Following notes apply:</p>\n<ol>\n<li>The <code class=\"gatsby-code-text\">&lt;PATH TO SOURCE COMPONENT&gt;</code> <strong>MUST</strong> refer to file, not the folder, i.e. instead of: <code class=\"gatsby-code-text\">component/Header</code> write <code class=\"gatsby-code-text\">component/Header/Header.component</code>.</li>\n<li>The default export must be preserved - the new, extended class must contain the same logic, i.e. if I have following in the code: <code class=\"gatsby-code-text\">export default connect(mapStateToProps, mapDispatchToProps)(Header);</code> I must import the connect from redux (just like in source component), <code class=\"gatsby-code-text\">mapStateToProps</code> and <code class=\"gatsby-code-text\">mapDispatchToProps</code> from source file I am extending, and ensure my component, contains the same default export.</li>\n<li>Importing <code class=\"gatsby-code-text\">import { A } from &#39;...&#39;;</code> is not similar to: <code class=\"gatsby-code-text\">import A from &#39;...&#39;;</code> first code imports the named export, second - default export. You most probably want to <strong>use the named export</strong> (the first option, with curly brackets).</li>\n</ol>\n<p>Let’s now consider a common cases, to prove the algorithm works.</p>\n<h2 id=\"overriding-the-main-router\"><a href=\"#overriding-the-main-router\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overriding the main router</h2>\n<p>The original router file is located in <code class=\"gatsby-code-text\">app/route/index.js</code>. It is common to extend it in order to add new routes, here is a template to use:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"82333838206860510000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// importing the necessary module to implement the &quot;default export&quot;\nimport { connect } from 'react-redux';\n\n// importing all parts of original header planned to modify\nimport {\n    BEFORE_ITEMS_TYPE,\n    // SWITCH_ITEMS_TYPE,\n    // AFTER_ITEMS_TYPE,\n    mapStateToProps,\n    mapDispatchToProps,\n    AppRouter as SourceAppRouter\n} from 'SourceRoute';\n\n// export all unmodified exports from original file\nexport {\n    CartPage,\n    CategoryPage,\n    Checkout,\n    CmsPage,\n    HomePage,\n    MyAccount,\n    NoMatchHandler,\n    PasswordChangePage,\n    ProductPage,\n    SearchPage,\n    SomethingWentWrong,\n    UrlRewrites,\n    MenuPage,\n    BEFORE_ITEMS_TYPE,\n    SWITCH_ITEMS_TYPE,\n    AFTER_ITEMS_TYPE,\n    history\n} from 'SourceRoute';\n\n// modify the intended part of the logic, notice, the class is also exported!\nexport class AppRouter extends SourceAppRouter {\n    constructor(props) {\n        super(props);\n\n        this[BEFORE_ITEMS_TYPE].push({ /** ... */ });\n    }\n}\n\n// preserve the default export\nexport default connect(mapStateToProps, mapDispatchToProps)(AppRouter);`, `82333838206860510000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// importing the necessary module to implement the \"default export\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> connect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// importing all parts of original header planned to modify</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">BEFORE_ITEMS_TYPE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// SWITCH_ITEMS_TYPE,</span>\n    <span class=\"token comment\">// AFTER_ITEMS_TYPE,</span>\n    mapStateToProps<span class=\"token punctuation\">,</span>\n    mapDispatchToProps<span class=\"token punctuation\">,</span>\n    AppRouter <span class=\"token keyword\">as</span> SourceAppRouter\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'SourceRoute'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// export all unmodified exports from original file</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n    CartPage<span class=\"token punctuation\">,</span>\n    CategoryPage<span class=\"token punctuation\">,</span>\n    Checkout<span class=\"token punctuation\">,</span>\n    CmsPage<span class=\"token punctuation\">,</span>\n    HomePage<span class=\"token punctuation\">,</span>\n    MyAccount<span class=\"token punctuation\">,</span>\n    NoMatchHandler<span class=\"token punctuation\">,</span>\n    PasswordChangePage<span class=\"token punctuation\">,</span>\n    ProductPage<span class=\"token punctuation\">,</span>\n    SearchPage<span class=\"token punctuation\">,</span>\n    SomethingWentWrong<span class=\"token punctuation\">,</span>\n    UrlRewrites<span class=\"token punctuation\">,</span>\n    MenuPage<span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">BEFORE_ITEMS_TYPE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">SWITCH_ITEMS_TYPE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">AFTER_ITEMS_TYPE</span><span class=\"token punctuation\">,</span>\n    history\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'SourceRoute'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// modify the intended part of the logic, notice, the class is also exported!</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppRouter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SourceAppRouter</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">[</span><span class=\"token constant\">BEFORE_ITEMS_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">/** ... */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// preserve the default export</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>mapStateToProps<span class=\"token punctuation\">,</span> mapDispatchToProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>AppRouter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"overriding-the-header-component--container\"><a href=\"#overriding-the-header-component--container\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overriding the Header component &#x26; container</h2>\n<p>Imagine you want to extend the Header functionality, by adding additional state to it. This requires to extend the original component and container. Here is a template for them (files are: <code class=\"gatsby-code-text\">app/component/Header.component.js</code> and <code class=\"gatsby-code-text\">app/component/Header.container.js</code>).</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"26265444041517138000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// importing all parts of original header planned to modify & reuse\nimport SourceHeader from 'SourceComponent/Header/Header.component';\n\n// WARNING: the Header class is not correctly exported, in future versions, ^ this might become \\`import { Header as SourceHeader } from ...;\\`.\n\n// exporting custom variables for use in other components\nexport const MY_STATE = 'MY_STATE';\n\n// modify the intended part of the logic, notice, the class is also exported!\nexport class Header extends SourceHeader {\n    constructor(props) {\n        super(props);\n\n        this.stateMap[MY_STATE] = { /** ... */ };\n    }\n}\n\n// export all unmodified exports from original file\nexport {\n    PDP,\n    POPUP,\n    CATEGORY,\n    CUSTOMER_ACCOUNT,\n    CUSTOMER_SUB_ACCOUNT,\n    CUSTOMER_ACCOUNT_PAGE,\n    HOME_PAGE,\n    MENU,\n    MENU_SUBCATEGORY,\n    SEARCH,\n    FILTER,\n    CART,\n    CART_EDITING,\n    CHECKOUT,\n    CMS_PAGE\n} from 'SourceComponent/Header/Header.component';\n\n// preserve the default export\nexport default Header;`, `26265444041517138000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// importing all parts of original header planned to modify &amp; reuse</span>\n<span class=\"token keyword\">import</span> SourceHeader <span class=\"token keyword\">from</span> <span class=\"token string\">'SourceComponent/Header/Header.component'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// WARNING: the Header class is not correctly exported, in future versions, ^ this might become `import { Header as SourceHeader } from ...;`.</span>\n\n<span class=\"token comment\">// exporting custom variables for use in other components</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">MY_STATE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'MY_STATE'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// modify the intended part of the logic, notice, the class is also exported!</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Header</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SourceHeader</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>stateMap<span class=\"token punctuation\">[</span><span class=\"token constant\">MY_STATE</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/** ... */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// export all unmodified exports from original file</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">PDP</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">POPUP</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CATEGORY</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CUSTOMER_ACCOUNT</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CUSTOMER_SUB_ACCOUNT</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CUSTOMER_ACCOUNT_PAGE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">HOME_PAGE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">MENU</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">MENU_SUBCATEGORY</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">SEARCH</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">FILTER</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CART</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CART_EDITING</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CHECKOUT</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CMS_PAGE</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'SourceComponent/Header/Header.component'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// preserve the default export</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Header<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Cool, the state declared, now it is time to add default URL handler for it:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"61380053164861660000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// importing the necessary module to implement the &quot;default export&quot;\nimport { connect } from 'react-redux';\n\n// importing all parts of original header planned to modify\nimport {\n    mapStateToProps,\n    mapDispatchToProps,\n    HeaderContainer as SourceHeaderContainer\n} from 'SourceComponent/Header/Header.container';\n\n// importing from overridden component\nimport { MY_STATE } from 'Component/Header/Header.component';\n\n// modify the intended part of the logic, notice, the class is also exported!\nclass HeaderContainer extends SourceHeaderContainer {\n    constructor(props) {\n        super(props);\n\n        this.routeMap['/my-route'] = {\n            name: MY_STATE,\n            onMyButtonClick: this.onMyButtonClick.bind(this)\n        };\n    }\n\n    onMyButtonClick() {\n        // TODO: implement the click handler\n    }\n}\n\n// preserve the default export\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContainer);`, `61380053164861660000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// importing the necessary module to implement the \"default export\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> connect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-redux'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// importing all parts of original header planned to modify</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    mapStateToProps<span class=\"token punctuation\">,</span>\n    mapDispatchToProps<span class=\"token punctuation\">,</span>\n    HeaderContainer <span class=\"token keyword\">as</span> SourceHeaderContainer\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'SourceComponent/Header/Header.container'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// importing from overridden component</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">MY_STATE</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'Component/Header/Header.component'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// modify the intended part of the logic, notice, the class is also exported!</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HeaderContainer</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">SourceHeaderContainer</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>routeMap<span class=\"token punctuation\">[</span><span class=\"token string\">'/my-route'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n            name<span class=\"token operator\">:</span> <span class=\"token constant\">MY_STATE</span><span class=\"token punctuation\">,</span>\n            onMyButtonClick<span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">onMyButtonClick</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">onMyButtonClick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// TODO: implement the click handler</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// preserve the default export</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>mapStateToProps<span class=\"token punctuation\">,</span> mapDispatchToProps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>HeaderContainer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"overriding-the-styles\"><a href=\"#overriding-the-styles\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overriding the styles</h2>\n<p>For styles nothing changes. You create a file under the same name and it gets included into the bundle. Sometimes, the restart of frontend container is needed, because of the webpack cache. The sole exception to this general rule is the <code class=\"gatsby-code-text\">src/app/style/abstract/_abstract.scss</code> file. Because it is auto-imported by webpack in all <code class=\"gatsby-code-text\">*/**.scss</code> files. If you plan to override it:</p>\n<ol>\n<li>Create the file importing original styles, like this:</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"15029596928615164000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// In case you made no changes\n@import '../../../../../../../../../vendor/scandipwa/source/src/app/style/abstract/variables';\n@import '../../../../../../../../../vendor/scandipwa/source/src/app/style/abstract/media';\n@import '../../../../../../../../../vendor/scandipwa/source/src/app/style/abstract/button';\n@import '../../../../../../../../../vendor/scandipwa/source/src/app/style/abstract/loader';\n\n// In case you have overrides for the files\n@import './icons';\n@import './parts';\n\n// Here, you can add your files\n@import './my-abstract-style';`, `15029596928615164000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"gatsby-code-scss\"><code class=\"gatsby-code-scss\"><span class=\"token comment\">// In case you made no changes</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">'../../../../../../../../../vendor/scandipwa/source/src/app/style/abstract/variables'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">'../../../../../../../../../vendor/scandipwa/source/src/app/style/abstract/media'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">'../../../../../../../../../vendor/scandipwa/source/src/app/style/abstract/button'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">'../../../../../../../../../vendor/scandipwa/source/src/app/style/abstract/loader'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// In case you have overrides for the files</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">'./icons'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">'./parts'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Here, you can add your files</span>\n<span class=\"token keyword\">@import</span> <span class=\"token string\">'./my-abstract-style'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"2\">\n<li>In both webpack configurations (<code class=\"gatsby-code-text\">webpack.development.config.js</code>, <code class=\"gatsby-code-text\">webpack.production.config.js</code>) change following line:</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"42963157159064650000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`path.resolve(fallbackRoot, 'src', 'app', 'style', 'abstract', '_abstract.scss') // from &quot;fallbackRoot&quot;\npath.resolve(projectRoot, 'src', 'app', 'style', 'abstract', '_abstract.scss') // to &quot;projectRoot&quot;`, `42963157159064650000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>fallbackRoot<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'app'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abstract'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'_abstract.scss'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// from \"fallbackRoot\"</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>projectRoot<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'app'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'style'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abstract'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'_abstract.scss'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// to \"projectRoot\"</span></code></pre></div>\n<h2 id=\"overriding-templates-html-phtml\"><a href=\"#overriding-templates-html-phtml\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Overriding templates (HTML, pHTML)</h2>\n<p>ScandiPWA has a long-standing bug - the templates are impossibble to override. For some reason, they are always taken from vendor folder, instead of the theme. Because of that, in order to change anything inside of the <code class=\"gatsby-code-text\">src/public/index.development.html</code> or <code class=\"gatsby-code-text\">src/public/index.production.phtml</code> you must:</p>\n<ol>\n<li>Rename the files, in example, from <code class=\"gatsby-code-text\">src/public/index.development.html</code> to <code class=\"gatsby-code-text\">src/public/my-index.development.html</code>, and from <code class=\"gatsby-code-text\">src/public/index.production.phtml</code> to <code class=\"gatsby-code-text\">src/public/my-index.production.phtml</code>.</li>\n</ol>\n<blockquote>\n<p><strong>Note</strong>:</p>\n<p>we renamed from <code class=\"gatsby-code-text\">index</code> to <code class=\"gatsby-code-text\">my-index</code>! You can rename to anything else.</p>\n</blockquote>\n<ol start=\"2\">\n<li>Change their webpack import declarations. In both webpack configurations (<code class=\"gatsby-code-text\">webpack.development.config.js</code>, <code class=\"gatsby-code-text\">webpack.production.config.js</code>) change following line:</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"89229425038660420000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// In the &quot;webpack.production.config.js&quot;\npath.resolve(projectRoot, 'src', 'public', 'index.production.phtml') // from &quot;index.production.phtml&quot;\npath.resolve(projectRoot, 'src', 'public', 'index.production.phtml') // to &quot;my-index.production.phtml&quot;\n\n// In the &quot;webpack.development.config.js&quot;\npath.resolve(projectRoot, 'src', 'public', 'index.development.html') // from &quot;index.development.html&quot;\npath.resolve(projectRoot, 'src', 'public', 'my-index.development.html') // to &quot;my-index.development.html&quot;`, `89229425038660420000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// In the \"webpack.production.config.js\"</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>projectRoot<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.production.phtml'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// from \"index.production.phtml\"</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>projectRoot<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.production.phtml'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// to \"my-index.production.phtml\"</span>\n\n<span class=\"token comment\">// In the \"webpack.development.config.js\"</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>projectRoot<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index.development.html'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// from \"index.development.html\"</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>projectRoot<span class=\"token punctuation\">,</span> <span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'my-index.development.html'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// to \"my-index.development.html\"</span></code></pre></div>\n<ol start=\"3\">\n<li>Reload the webpack. If using docker the following command should be executed:</li>\n</ol>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"15560611256791890000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`# if you have the alias set up\ndcf restart frontend\n\n# without aliases (not recommended)\ndocker-compose -f docker-compose.yml -f docker-compose.local.yml -f docker-compose.ssl.yml -f docker-compose.frontend.yml restart frontend`, `15560611256791890000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token comment\"># if you have the alias set up</span>\ndcf restart frontend\n\n<span class=\"token comment\"># without aliases (not recommended)</span>\ndocker-compose -f docker-compose.yml -f docker-compose.local.yml -f docker-compose.ssl.yml -f docker-compose.frontend.yml restart frontend</code></pre></div>\n<p>If using without docker - stop the server, then start it again.</p>\n<h2 id=\"extending-reducers--actions\"><a href=\"#extending-reducers--actions\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extending reducers &#x26; actions</h2>\n<p>The reducers are not classes. The actions are simple functions. Here is an instruction to do both: create new action, update initial state.</p>\n<p>To extend the action, in example the <code class=\"gatsby-code-text\">src/app/store/Navigation/Navigation.action.js</code>. Create the file with same name and path in your theme (<code class=\"gatsby-code-text\">app/design/&lt;VENDOR&gt;/&lt;THEME&gt;</code>), then do following:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"89888967836563140000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// import constants you plan to use\nimport {\n    CHANGE_NAVIGATION_STATE\n} from 'SourceStore/Navigation/Navigation.action';\n\n// redeclare, modify the original action\nexport const changeNavigationState = (navigationType, navigationState, myVariable) => ({\n    type: CHANGE_NAVIGATION_STATE,\n    navigationType,\n    navigationState,\n    myVariable\n});\n\n// declare new action type\nexport const MY_CUSTOM_ACTION = 'MY_CUSTOM_ACTION';\n\n// declare new action\nexport const myCustomAction = myVariable => ({\n    type: MY_CUSTOM_ACTION,\n    myVariable\n});\n\n// export unchanged constants from original file\nexport {\n    GOTO_PREVIOUS_NAVIGATION_STATE,\n    CHANGE_NAVIGATION_STATE,\n    goToPreviousNavigationState\n} from 'SourceStore/Navigation/Navigation.action';`, `89888967836563140000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// import constants you plan to use</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">CHANGE_NAVIGATION_STATE</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'SourceStore/Navigation/Navigation.action'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// redeclare, modify the original action</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">changeNavigationState</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">navigationType<span class=\"token punctuation\">,</span> navigationState<span class=\"token punctuation\">,</span> myVariable</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token constant\">CHANGE_NAVIGATION_STATE</span><span class=\"token punctuation\">,</span>\n    navigationType<span class=\"token punctuation\">,</span>\n    navigationState<span class=\"token punctuation\">,</span>\n    myVariable\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// declare new action type</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">MY_CUSTOM_ACTION</span> <span class=\"token operator\">=</span> <span class=\"token string\">'MY_CUSTOM_ACTION'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// declare new action</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">myCustomAction</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">myVariable</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token operator\">:</span> <span class=\"token constant\">MY_CUSTOM_ACTION</span><span class=\"token punctuation\">,</span>\n    myVariable\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// export unchanged constants from original file</span>\n<span class=\"token keyword\">export</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">GOTO_PREVIOUS_NAVIGATION_STATE</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">CHANGE_NAVIGATION_STATE</span><span class=\"token punctuation\">,</span>\n    goToPreviousNavigationState\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'SourceStore/Navigation/Navigation.action'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Extending reducer is a little more complex. The main idea is to create a switch before the original reducer, where if new / necessary action type is found - return the state update, else call original reducer. Take a look:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"34724957946325840000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`// import outside dependencies needed for extension\nimport {\n    DEFAULT_STATE\n} from 'Component/NavigationAbstract/NavigationAbstract.container';\n\nimport { MY_CUSTOM_ACTION } from './Navigation.action';\n\n// import constants you plan to modify, reuse\nimport sourceNavigationReducer, {\n    initialState as sourceInitialState,\n} from 'SourceStore/Navigation/Navigation.reducer';\n\n// declare anything needed for the reducer\nexport const MY_NEW_NAVIGATION_TYPE = 'MY_NEW_NAVIGATION_TYPE';\n\nconst handleMyCustomAction = (action) => {\n    // take the payload of the action\n    const { myVariable } = action;\n\n    return {\n        // update the global state\n        ...state\n    };\n};\n\n// extend initial state, export it\nexport const initialState = {\n    ...sourceInitialState,\n    [MY_NEW_NAVIGATION_TYPE]: {\n        navigationState: DEFAULT_STATE,\n        navigationStateHistory: [DEFAULT_STATE]\n    }\n};\n\n// extend the reducer with custom action handler\nconst NavigationReducer = (state = initialState, action) => {\n    const { type } = action;\n\n    switch (type) {\n    case MY_CUSTOM_ACTION:\n        return handleMyCustomAction(action);\n    default:\n        return sourceNavigationReducer()\n    }\n};\n\n// export the new reducer as default\nexport default NavigationReducer;`, `34724957946325840000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token comment\">// import outside dependencies needed for extension</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">DEFAULT_STATE</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'Component/NavigationAbstract/NavigationAbstract.container'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> <span class=\"token constant\">MY_CUSTOM_ACTION</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./Navigation.action'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// import constants you plan to modify, reuse</span>\n<span class=\"token keyword\">import</span> sourceNavigationReducer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    initialState <span class=\"token keyword\">as</span> sourceInitialState<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'SourceStore/Navigation/Navigation.reducer'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// declare anything needed for the reducer</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">MY_NEW_NAVIGATION_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'MY_NEW_NAVIGATION_TYPE'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleMyCustomAction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// take the payload of the action</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> myVariable <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> action<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// update the global state</span>\n        <span class=\"token operator\">...</span>state\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// extend initial state, export it</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> initialState <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>sourceInitialState<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token constant\">MY_NEW_NAVIGATION_TYPE</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        navigationState<span class=\"token operator\">:</span> <span class=\"token constant\">DEFAULT_STATE</span><span class=\"token punctuation\">,</span>\n        navigationStateHistory<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">DEFAULT_STATE</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// extend the reducer with custom action handler</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">NavigationReducer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">state <span class=\"token operator\">=</span> initialState<span class=\"token punctuation\">,</span> action</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> action<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>type<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">case</span> <span class=\"token constant\">MY_CUSTOM_ACTION</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">handleMyCustomAction</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">sourceNavigationReducer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// export the new reducer as default</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NavigationReducer<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"extending-plugins\"><a href=\"#extending-plugins\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Extending plugins</h2>\n<h3 id=\"watch-an-explanation-video-1\"><a href=\"#watch-an-explanation-video-1\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Watch an explanation video</h3>\n<div class=\"gatsby-resp-iframe-wrapper\" style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; \" > <div class=\"video\"> <iframe src=\"https://www.youtube.com/embed/vG5eZcvCq48\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\" position: absolute; top: 0; left: 0; width: 100%; height: 100%; \"></iframe> </div> </div>\n<h3 id=\"approach-1-fallback-plugin\"><a href=\"#approach-1-fallback-plugin\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Approach 1: Fallback Plugin</h3>\n<ol>\n<li>Creating a new file</li>\n</ol>\n<p>Imagine you have to override the following file:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"94055755355169520000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`.../awesome-extension-provider/paypal-graphql/src/scandipwa/app/component/PayPal/PayPal.component.js`, `94055755355169520000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token punctuation\">..</span>./awesome-extension-provider/paypal-graphql/src/scandipwa/app/component/PayPal/PayPal.component.js</code></pre></div>\n<p>In order to acomplish that all you need to do is to create a file with the following path:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"69139374458292530000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`.../pwa/src/plugin/awesome-extension-provider/paypal-graphql/app/component/PayPal/PayPal.component.js`, `69139374458292530000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token punctuation\">..</span>./pwa/src/plugin/awesome-extension-provider/paypal-graphql/app/component/PayPal/PayPal.component.js</code></pre></div>\n<p>The pattern is: for file with the following path</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"63356159721747190000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`.../<vendor>/<extension>/src/scandipwa/<PATH>`, `63356159721747190000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token punctuation\">..</span>./<span class=\"token operator\">&lt;</span>vendor<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>extension<span class=\"token operator\">></span>/src/scandipwa/<span class=\"token operator\">&lt;</span><span class=\"token environment constant\">PATH</span><span class=\"token operator\">></span></code></pre></div>\n<p>You need to create a file with the following path, that is going to be taken in place of original file. Notice that to reduce the path you don’t need to reference src/scandipwa folders each and every time. They’d always be there, that’s why we removed them from the modified path to simplify file structure.</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"465429760372582100\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`.../pwa/src/plugin/<vendor>/<extension>/<PATH>`, `465429760372582100`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"gatsby-code-bash\"><code class=\"gatsby-code-bash\"><span class=\"token punctuation\">..</span>./pwa/src/plugin/<span class=\"token operator\">&lt;</span>vendor<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span>extension<span class=\"token operator\">></span>/<span class=\"token operator\">&lt;</span><span class=\"token environment constant\">PATH</span><span class=\"token operator\">></span></code></pre></div>\n<ol start=\"2\">\n<li>Retrieving the original functionality</li>\n</ol>\n<p>You can import anything exported from the original plugin file to extend it, just as when extending source theme files. To do that you can reference the original file by relative path, but that is a bit too long. To make it simpler, a different approach has been implemented.</p>\n<p>Now you can import original functionality using a generated alias, that depends on the package name in <code class=\"gatsby-code-text\">composer.json</code> file in the root of your extension. It consists of vendor name and extension name, written in PascalCase and separated by underscore.</p>\n<p>So if you need to import something from the <code class=\"gatsby-code-text\">scandipwa/paypal-graphql</code> package you can do it by referencing the original file by following alias, anywhere throughout the application:</p>\n<div\n              class=\"gatsby-code-button-container\"\n              data-toaster-id=\"69868791935270910000\"\n              data-toaster-class=\"gatsby-code-button-toaster customToasterClass\"\n              data-toaster-text-class=\"gatsby-code-button-toaster-text customToasterTextClass\"\n              data-toaster-text=\"Copied\"\n              data-toaster-duration=\"3500\"\n              onClick=\"copyToClipboard(`import PayPal from 'Scandipwa_PaypalGraphql.Component/PayPal';\n// instead of\nimport PayPal from '../../../<some more iterations>/awesome-extension-provider/paypal-graphql/src/scandipwa/app/component/PayPal';`, `69868791935270910000`)\"\n            >\n              <div\n                class=\"gatsby-code-button customButtonClass\"\n                data-tooltip=\"\"\n              >\n                Copy<svg class=\"gatsby-code-button-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M16 1H2v16h2V3h12V1zm-1 4l6 6v12H6V5h9zm-1 7h5.5L14 6.5V12z\"/></svg>\n              </div>\n            </div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">import</span> PayPal <span class=\"token keyword\">from</span> <span class=\"token string\">'Scandipwa_PaypalGraphql.Component/PayPal'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// instead of</span>\n<span class=\"token keyword\">import</span> PayPal <span class=\"token keyword\">from</span> <span class=\"token string\">'../../../&lt;some more iterations>/awesome-extension-provider/paypal-graphql/src/scandipwa/app/component/PayPal'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p><strong>Note</strong>:</p>\n<p>remember that these aliases are case-sensitive. PayPalGraphQL instead of PaypalGraphql will throw errors</p>\n</blockquote>\n<ol start=\"3\">\n<li>Extending</li>\n</ol>\n<p>See more on extending functionality with such approach (using ScandiPWA Fallback plugin) above. All extensions-related specifics have been described in this article.</p>\n<h2 id=\"need-more-examples\"><a href=\"#need-more-examples\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Need more examples?</h2>\n<p>Other component extension is similar. Please re-read the step-by-step algorithm, this really helps!</p>\n<p>Are you still struggling? <a href=\"https://join.slack.com/t/scandipwa/shared_invite/enQtNzE2Mjg1Nzg3MTg5LTQwM2E2NmQ0NmQ2MzliMjVjYjQ1MTFiYWU5ODAyYTYyMGQzNWM3MDhkYzkyZGMxYTJlZWI1N2ExY2Q1MDMwMTk\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Join the Slack channel</a> and do not hesitate to share your problems there!</p>","frontmatter":{"title":"Extension mechanism"},"fields":{"path":"content/docs/extension.md","slug":"/docs/extension.html"}}},"pageContext":{"slug":"/docs/extension.html"}},"staticQueryHashes":[]}